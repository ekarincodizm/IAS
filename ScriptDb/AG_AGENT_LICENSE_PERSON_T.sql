/*
Navicat Oracle Data Transfer
Oracle Client Version : 11.2.0.3.0

Source Server         : AGDOI
Source Server Version : 90200
Source Host           : :1521
Source Schema         : AGDOI

Target Server Type    : ORACLE
Target Server Version : 90200
File Encoding         : 65001

Date: 2014-04-09 14:37:04
*/


-- ----------------------------
-- Table structure for AG_AGENT_LICENSE_PERSON_T
-- ----------------------------

CREATE TABLE "AGDOI"."AG_AGENT_LICENSE_PERSON_T" (
"LICENSE_NO" VARCHAR2(15 BYTE) NOT NULL ,
"ID_CARD_NO" VARCHAR2(13 BYTE) NULL ,
"USER_ID" VARCHAR2(15 BYTE) NULL ,
"USER_DATE" DATE NULL ,
"COMP_LICENSE_NO" VARCHAR2(15 BYTE) NULL ,
"COMP_LICENSE_TYPE" VARCHAR2(2 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "AGDOI"."AG_AGENT_LICENSE_PERSON_T" IS '???????????????????????????????? ???????? ?????? 03,04';
COMMENT ON COLUMN "AGDOI"."AG_AGENT_LICENSE_PERSON_T"."LICENSE_NO" IS '??????????????';
COMMENT ON COLUMN "AGDOI"."AG_AGENT_LICENSE_PERSON_T"."ID_CARD_NO" IS '??????????????????';
COMMENT ON COLUMN "AGDOI"."AG_AGENT_LICENSE_PERSON_T"."USER_ID" IS '?????????';
COMMENT ON COLUMN "AGDOI"."AG_AGENT_LICENSE_PERSON_T"."USER_DATE" IS '????????????';
COMMENT ON COLUMN "AGDOI"."AG_AGENT_LICENSE_PERSON_T"."COMP_LICENSE_NO" IS '???????????????????????(???????????????)';
COMMENT ON COLUMN "AGDOI"."AG_AGENT_LICENSE_PERSON_T"."COMP_LICENSE_TYPE" IS '???????????????????????(???????????????)';

-- ----------------------------
-- Indexes structure for table AG_AGENT_LICENSE_PERSON_T
-- ----------------------------
CREATE INDEX "AGDOI"."AGIN_PERSONL_ID_CARD"
ON "AGDOI"."AG_AGENT_LICENSE_PERSON_T" ("ID_CARD_NO" ASC)
LOGGING;
CREATE INDEX "AGDOI"."AGIN_PERSONL_LICENSE"
ON "AGDOI"."AG_AGENT_LICENSE_PERSON_T" ("LICENSE_NO" ASC, "ID_CARD_NO" ASC)
LOGGING;
CREATE INDEX "AGDOI"."AG_AGENT_LICENSE_PERSON_T_IND1"
ON "AGDOI"."AG_AGENT_LICENSE_PERSON_T" ("COMP_LICENSE_NO" ASC)
LOGGING;

-- ----------------------------
-- Triggers structure for table AG_AGENT_LICENSE_PERSON_T
-- ----------------------------
CREATE OR REPLACE TRIGGER "AGDOI"."AG_AGENT_LICENSE_PERSON_TRG" BEFORE INSERT OR UPDATE ON "AGDOI"."AG_AGENT_LICENSE_PERSON_T" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
BEGIN
  	:NEW.USER_ID 	:= GET_SYS_USER;
  	:NEW.USER_DATE 	:= SYSDATE;
END;
CREATE OR REPLACE TRIGGER "AGDOI"."AG_AGENT_PERSON_INS_TRG" AFTER INSERT OR DELETE OR UPDATE ON "AGDOI"."AG_AGENT_LICENSE_PERSON_T" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
BEGIN
      IF INSERTING THEN
         BEGIN
             INSERT INTO AG_AGENT_T(LICENSE_NO, ID_CARD_NO, AGENT_TYPE, COMP_LICENSE_NO,
                                   COMP_LICENSE_TYPE)
                           VALUES (:NEW.LICENSE_NO, :NEW.ID_CARD_NO, 'B', :NEW.COMP_LICENSE_NO,
                                          :NEW.COMP_LICENSE_TYPE);
             EXCEPTION
                  WHEN OTHERS THEN NULL;
          END;
    ELSIF UPDATING THEN
          BEGIN
             UPDATE AG_AGENT_T
                    SET  ID_CARD_NO    =  :NEW.ID_CARD_NO,
                             AGENT_TYPE    = 'B',
                             COMP_LICENSE_NO = :NEW.COMP_LICENSE_NO,
                             COMP_LICENSE_TYPE = :NEW.COMP_LICENSE_TYPE
                 WHERE LICENSE_NO = :OLD.LICENSE_NO;
             EXCEPTION
                  WHEN OTHERS THEN NULL;
          END;
   ELSIF DELETING THEN
          BEGIN
             DELETE AG_AGENT_T
                 WHERE LICENSE_NO = :OLD.LICENSE_NO;
             EXCEPTION
                  WHEN OTHERS THEN NULL;
          END;
   END IF;
END;CREATE OR REPLACE TRIGGER "AGDOI"."AG_AGENT_UP_INCOMPAGENT_TRG" AFTER UPDATE ON "AGDOI"."AG_AGENT_LICENSE_PERSON_T" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
DECLARE
  v_flag      CHAR(1);
  v_pre       AG_PERSONAL_T.PRE_NAME_CODE%TYPE;
  v_name      AG_PERSONAL_T.NAMES%TYPE;
  v_last      AG_PERSONAL_T.LASTNAME%TYPE;
BEGIN
  /****** ????????????????????????????????? *******/
  IF :OLD.ID_CARD_NO <> :NEW.ID_CARD_NO THEN
     BEGIN
       SELECT 'T' INTO v_flag
       FROM   AG_PERSON_INCOMP_AGENT_T
       WHERE  LICENSE_NO = :OLD.LICENSE_NO;
     EXCEPTION
       WHEN TOO_MANY_ROWS THEN v_flag := 'T';
       WHEN NO_DATA_FOUND THEN v_flag := 'F';
       WHEN OTHERS        THEN v_flag := 'F';
     END;
     IF v_flag = 'T' THEN
        BEGIN
          SELECT PRE_NAME_CODE, NAMES , LASTNAME
          INTO   v_pre        , v_name, v_last
          FROM   AG_PERSONAL_T
          WHERE  ID_CARD_NO = :NEW.ID_CARD_NO;
        EXCEPTION WHEN NO_DATA_FOUND THEN
          v_pre := NULL; v_name := NULL; v_last := NULL;
        END;
        BEGIN
          UPDATE AG_PERSON_INCOMP_AGENT_T
          SET    ID_CARD_NO    = :NEW.ID_CARD_NO
                ,PRE_NAME_CODE = v_pre
                ,NAME_LASTNAME = v_name||' '||v_last
          WHERE  LICENSE_NO = :OLD.LICENSE_NO;
        EXCEPTION WHEN OTHERS THEN NULL;
        END;
     END IF;
  END IF;
END;
CREATE OR REPLACE TRIGGER "AGDOI"."AG_DLG_AG_MAS_AGENTP_TRG" AFTER INSERT OR DELETE OR UPDATE ON "AGDOI"."AG_AGENT_LICENSE_PERSON_T" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
DECLARE
 V_PRE_NAME_CODE AG_PERSONAL_T.PRE_NAME_CODE%TYPE;
 V_PRE_NAME         Gb_prefix_r.pre_full%Type;
 V_NAMES  AG_PERSONAL_T.NAMES%TYPE;
 V_LASTNAME  AG_PERSONAL_T.LASTNAME%TYPE;
 V_ID_CARD_NO  AG_PERSONAL_T.ID_CARD_NO%TYPE;
 V_ADDRESS1  AG_PERSONAL_T.ADDRESS1%TYPE;
 V_ADDRESS2  AG_PERSONAL_T.ADDRESS2%TYPE;
 V_AREA_CODE  AG_PERSONAL_T.AREA_CODE%TYPE;
 V_ZIPCODE  AG_PERSONAL_T.ZIPCODE%TYPE;
 V_TELEPHONE  AG_PERSONAL_T.TELEPHONE%TYPE;
 V_TYPE_CODE   AG_LICENSE_T.LICENSE_TYPE_CODE%TYPE;
 V_COMP_LICENSE_NO AG_AGENT_LICENSE_PERSON_T.COMP_LICENSE_NO%TYPE;
BEGIN
 IF INSERTING or UPDATING THEN
  BEGIN
   SELECT PRE_NAME_CODE,substr(NAMES,1,40), substr(LASTNAME,1,40)
    ,ID_CARD_NO, ADDRESS1, ADDRESS2
    ,AREA_CODE, ZIPCODE
    ,TELEPHONE
   INTO V_PRE_NAME_CODE,V_NAMES,V_LASTNAME
    ,V_ID_CARD_NO,V_ADDRESS1,V_ADDRESS2
    ,V_AREA_CODE,V_ZIPCODE
    ,V_TELEPHONE
   FROM AG_PERSONAL_T
   WHERE ID_CARD_NO = :NEW.ID_CARD_NO;
  EXCEPTION
   WHEN OTHERS THEN NULL;
  END;

  V_PRE_NAME := substr(AG_GET_PRENAME_T(V_PRE_NAME_CODE),1,20);

  BEGIN
   SELECT LICENSE_TYPE_CODE
     INTO V_TYPE_CODE
     FROM AG_LICENSE_T
    WHERE LICENSE_NO = :NEW.LICENSE_NO;
  EXCEPTION
   WHEN OTHERS THEN NULL;
  END;
 END IF;

 IF INSERTING  THEN
  BEGIN
   UPDATE DLG_AG_MAS
      SET AG_TITLE  = V_PRE_NAME
    ,AG_NAME  = V_NAMES
    ,AG_SIRNAME = V_LASTNAME
    ,PID  = V_ID_CARD_NO
    ,CURR_ADDR1 = V_ADDRESS1
    ,CURR_ADDR2 = V_ADDRESS2
    ,CURR_AREA_CODE = V_AREA_CODE
    ,CURR_ZIP = V_ZIPCODE
    ,CURR_TEL = V_TELEPHONE
    ,COMP_ID = :NEW.COMP_LICENSE_NO
   WHERE AGENT_ID = :NEW.LICENSE_NO
     AND AGENT_TYPE = V_TYPE_CODE;
  EXCEPTION
   WHEN OTHERS THEN NULL;
  END;
 ELSIF UPDATING  THEN
  BEGIN
   UPDATE DLG_AG_MAS
      SET AG_TITLE  = V_PRE_NAME
    ,AG_NAME  = V_NAMES
    ,AG_SIRNAME = V_LASTNAME
    ,PID  = V_ID_CARD_NO
    ,CURR_ADDR1 = V_ADDRESS1
    ,CURR_ADDR2 = V_ADDRESS2
    ,CURR_AREA_CODE = V_AREA_CODE
    ,CURR_ZIP = V_ZIPCODE
    ,CURR_TEL = V_TELEPHONE
    ,COMP_ID = :NEW.COMP_LICENSE_NO
   WHERE AGENT_ID = :OLD.LICENSE_NO
     AND AGENT_TYPE = V_TYPE_CODE;
  EXCEPTION
   WHEN OTHERS THEN NULL;
  END;
 END IF;
END;
-- ----------------------------
-- Primary Key structure for table AG_AGENT_LICENSE_PERSON_T
-- ----------------------------
ALTER TABLE "AGDOI"."AG_AGENT_LICENSE_PERSON_T" ADD PRIMARY KEY ("LICENSE_NO");

-- ----------------------------
-- Foreign Key structure for table "AGDOI"."AG_AGENT_LICENSE_PERSON_T"
-- ----------------------------
ALTER TABLE "AGDOI"."AG_AGENT_LICENSE_PERSON_T" ADD FOREIGN KEY ("ID_CARD_NO") REFERENCES "AGDOI"."AG_PERSONAL_T" ("ID_CARD_NO");
