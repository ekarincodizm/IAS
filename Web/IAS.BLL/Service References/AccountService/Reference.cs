//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IAS.BLL.AccountService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountService.IAccountService")]
    public interface IAccountService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountDetail", ReplyAction="http://tempuri.org/IAccountService/GetAccountDetailResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetAccountDetail(string member_type, string user_name, string id_card, string email, int num_page, int RowPerPage, bool Count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAccountDetailById", ReplyAction="http://tempuri.org/IAccountService/GetAccountDetailByIdResponse")]
        IAS.DTO.ResponseService<IAS.DTO.AccountDetail> GetAccountDetailById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/EditMemberTypeAndActive", ReplyAction="http://tempuri.org/IAccountService/EditMemberTypeAndActiveResponse")]
        IAS.DTO.ResponseMessage<bool> EditMemberTypeAndActive(IAS.DTO.AccountDetail ent, IAS.DTO.UserProfile userProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/IsChangePassword", ReplyAction="http://tempuri.org/IAccountService/IsChangePasswordResponse")]
        IAS.DTO.ResponseMessage<bool> IsChangePassword(IAS.DTO.UserProfile userProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/ChangePassword", ReplyAction="http://tempuri.org/IAccountService/ChangePasswordResponse")]
        IAS.DTO.ResponseMessage<bool> ChangePassword(IAS.DTO.User user, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/DisableUser", ReplyAction="http://tempuri.org/IAccountService/DisableUserResponse")]
        IAS.DTO.ResponseMessage<bool> DisableUser(IAS.DTO.AccountDetail user, IAS.DTO.UserProfile userProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/ChangePasswordByAdmin", ReplyAction="http://tempuri.org/IAccountService/ChangePasswordByAdminResponse")]
        IAS.DTO.ResponseMessage<bool> ChangePasswordByAdmin(IAS.DTO.User user, IAS.DTO.UserProfile userProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SelectApploveDocumentType", ReplyAction="http://tempuri.org/IAccountService/SelectApploveDocumentTypeResponse")]
        IAS.DTO.ResponseService<IAS.DTO.ApploveDocumnetType[]> SelectApploveDocumentType(string p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SelectAsso", ReplyAction="http://tempuri.org/IAccountService/SelectAssoResponse")]
        IAS.DTO.ResponseService<IAS.DTO.ASSOCIATION[]> SelectAsso(string p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/SelectAssoApplove", ReplyAction="http://tempuri.org/IAccountService/SelectAssoApploveResponse")]
        IAS.DTO.ResponseService<IAS.DTO.ASSOCIATION_APPROVE[]> SelectAssoApplove(string p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AddAssocitionApplove", ReplyAction="http://tempuri.org/IAccountService/AddAssocitionApploveResponse")]
        IAS.DTO.ResponseService<string> AddAssocitionApplove(IAS.DTO.ASSOCIATION_APPROVE[] listadd, IAS.DTO.ASSOCIATION_APPROVE[] listdelete, string by_user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/UpdateApploveDoctype", ReplyAction="http://tempuri.org/IAccountService/UpdateApploveDoctypeResponse")]
        IAS.DTO.ResponseService<string> UpdateApploveDoctype(IAS.DTO.ApploveDocumnetType[] listDoc, string by_user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetAssociationNameById", ReplyAction="http://tempuri.org/IAccountService/GetAssociationNameByIdResponse")]
        IAS.DTO.ResponseService<IAS.DTO.DataItem> GetAssociationNameById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/GetCompanyNameById", ReplyAction="http://tempuri.org/IAccountService/GetCompanyNameByIdResponse")]
        IAS.DTO.ResponseService<IAS.DTO.DataItem> GetCompanyNameById(string Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountServiceChannel : IAS.BLL.AccountService.IAccountService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountServiceClient : System.ServiceModel.ClientBase<IAS.BLL.AccountService.IAccountService>, IAS.BLL.AccountService.IAccountService {
        
        public AccountServiceClient() {
        }
        
        public AccountServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetAccountDetail(string member_type, string user_name, string id_card, string email, int num_page, int RowPerPage, bool Count) {
            return base.Channel.GetAccountDetail(member_type, user_name, id_card, email, num_page, RowPerPage, Count);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.AccountDetail> GetAccountDetailById(string id) {
            return base.Channel.GetAccountDetailById(id);
        }
        
        public IAS.DTO.ResponseMessage<bool> EditMemberTypeAndActive(IAS.DTO.AccountDetail ent, IAS.DTO.UserProfile userProfile) {
            return base.Channel.EditMemberTypeAndActive(ent, userProfile);
        }
        
        public IAS.DTO.ResponseMessage<bool> IsChangePassword(IAS.DTO.UserProfile userProfile) {
            return base.Channel.IsChangePassword(userProfile);
        }
        
        public IAS.DTO.ResponseMessage<bool> ChangePassword(IAS.DTO.User user, string newPassword) {
            return base.Channel.ChangePassword(user, newPassword);
        }
        
        public IAS.DTO.ResponseMessage<bool> DisableUser(IAS.DTO.AccountDetail user, IAS.DTO.UserProfile userProfile) {
            return base.Channel.DisableUser(user, userProfile);
        }
        
        public IAS.DTO.ResponseMessage<bool> ChangePasswordByAdmin(IAS.DTO.User user, IAS.DTO.UserProfile userProfile) {
            return base.Channel.ChangePasswordByAdmin(user, userProfile);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.ApploveDocumnetType[]> SelectApploveDocumentType(string p) {
            return base.Channel.SelectApploveDocumentType(p);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.ASSOCIATION[]> SelectAsso(string p) {
            return base.Channel.SelectAsso(p);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.ASSOCIATION_APPROVE[]> SelectAssoApplove(string p) {
            return base.Channel.SelectAssoApplove(p);
        }
        
        public IAS.DTO.ResponseService<string> AddAssocitionApplove(IAS.DTO.ASSOCIATION_APPROVE[] listadd, IAS.DTO.ASSOCIATION_APPROVE[] listdelete, string by_user) {
            return base.Channel.AddAssocitionApplove(listadd, listdelete, by_user);
        }
        
        public IAS.DTO.ResponseService<string> UpdateApploveDoctype(IAS.DTO.ApploveDocumnetType[] listDoc, string by_user) {
            return base.Channel.UpdateApploveDoctype(listDoc, by_user);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.DataItem> GetAssociationNameById(string Id) {
            return base.Channel.GetAssociationNameById(Id);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.DataItem> GetCompanyNameById(string Id) {
            return base.Channel.GetCompanyNameById(Id);
        }
    }
}
