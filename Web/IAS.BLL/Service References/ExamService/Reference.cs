//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IAS.BLL.ExamService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ExamService.IExamService")]
    public interface IExamService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetExamScheduleByCriteria", ReplyAction="http://tempuri.org/IExamService/GetExamScheduleByCriteriaResponse")]
        IAS.DTO.ResponseService<IAS.DTO.Exams.GetExamScheduleByCriteriaResponse> GetExamScheduleByCriteria(IAS.DTO.Exams.GetExamScheduleByCriteriaRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/InsertExam", ReplyAction="http://tempuri.org/IExamService/InsertExamResponse")]
        IAS.DTO.ResponseMessage<bool> InsertExam(IAS.DTO.ExamSchedule ent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/UpdateExam", ReplyAction="http://tempuri.org/IExamService/UpdateExamResponse")]
        IAS.DTO.ResponseMessage<bool> UpdateExam(IAS.DTO.ExamSchedule ent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/DeleteExam", ReplyAction="http://tempuri.org/IExamService/DeleteExamResponse")]
        IAS.DTO.ResponseMessage<bool> DeleteExam(string testingNo, string examPlaceCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetSeatAmount", ReplyAction="http://tempuri.org/IExamService/GetSeatAmountResponse")]
        IAS.DTO.ResponseService<string> GetSeatAmount(string examPlaceCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetExamFee", ReplyAction="http://tempuri.org/IExamService/GetExamFeeResponse")]
        IAS.DTO.ResponseService<string> GetExamFee();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetExamByCriteria", ReplyAction="http://tempuri.org/IExamService/GetExamByCriteriaResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetExamByCriteria(string examPlaceGroupCode, string examPlaceCode, string licenseTypeCode, string agentType, string yearMonth, string timeCode, string testingDate, int resultPage, int PageSize, bool CountAgain, string Owner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetExamByTestingNoAndPlaceCode", ReplyAction="http://tempuri.org/IExamService/GetExamByTestingNoAndPlaceCodeResponse")]
        IAS.DTO.ResponseService<IAS.DTO.ExamSchedule> GetExamByTestingNoAndPlaceCode(string testingNo, string placeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetExamByYearMonth", ReplyAction="http://tempuri.org/IExamService/GetExamByYearMonthResponse")]
        IAS.DTO.ResponseService<System.DateTime[]> GetExamByYearMonth(string yearMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetExamByTestingNo", ReplyAction="http://tempuri.org/IExamService/GetExamByTestingNoResponse")]
        IAS.DTO.ResponseService<IAS.DTO.ExamSchedule> GetExamByTestingNo(string testingNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/InsertAndCheckExamResultUpload", ReplyAction="http://tempuri.org/IExamService/InsertAndCheckExamResultUploadResponse")]
        IAS.DTO.ResponseService<IAS.DTO.UploadResult<IAS.DTO.UploadResultHeader, IAS.DTO.ExamResultTemp>> InsertAndCheckExamResultUpload(string fileName, string userId, string Default_TESTING_NO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetExamResultTempEdit", ReplyAction="http://tempuri.org/IExamService/GetExamResultTempEditResponse")]
        IAS.DTO.ResponseService<IAS.DTO.ExamResultTempEdit> GetExamResultTempEdit(string uploadGroupNo, string seqNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/UpdateExamResultEdit", ReplyAction="http://tempuri.org/IExamService/UpdateExamResultEditResponse")]
        IAS.DTO.ResponseMessage<bool> UpdateExamResultEdit(IAS.DTO.ExamResultTempEdit exam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/ExamResultUploadToSubmitNew", ReplyAction="http://tempuri.org/IExamService/ExamResultUploadToSubmitNewResponse")]
        IAS.DTO.ResponseMessage<bool> ExamResultUploadToSubmitNew(string groupId, string userId, System.Nullable<System.DateTime> expireDate, string TestingNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/CanChangeExam", ReplyAction="http://tempuri.org/IExamService/CanChangeExamResponse")]
        IAS.DTO.ResponseMessage<bool> CanChangeExam(string testingNo, string examPlaceCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetExamResultUploadByGroupId", ReplyAction="http://tempuri.org/IExamService/GetExamResultUploadByGroupIdResponse")]
        IAS.DTO.ResponseService<IAS.DTO.UploadResult<IAS.DTO.UploadHeader, IAS.DTO.ExamResultTemp>> GetExamResultUploadByGroupId(string groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/IsRightTestingNo", ReplyAction="http://tempuri.org/IExamService/IsRightTestingNoResponse")]
        IAS.DTO.ResponseMessage<bool> IsRightTestingNo(string testingNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetExamByTestCenter", ReplyAction="http://tempuri.org/IExamService/GetExamByTestCenterResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetExamByTestCenter(string examPlaceGroupCode, string examPlaceCode, string licenseTypeCode, string yearMonth, string timeCode, string testingDate, string compcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetExamMonthByCriteria", ReplyAction="http://tempuri.org/IExamService/GetExamMonthByCriteriaResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetExamMonthByCriteria(string examPlaceGroupCode, string examPlaceCode, string licenseTypeCode, string yearMonth, string timeCode, string testingDate, string Owner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetExamByCriteriaDefault", ReplyAction="http://tempuri.org/IExamService/GetExamByCriteriaDefaultResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetExamByCriteriaDefault(string examPlaceGroupCode, string examPlaceCode, string licenseTypeCode, string agentType, string yearMonth, string timeCode, string testingDate, int resultPage, int PageSize, bool CountAgain, string Owner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetSubject_List", ReplyAction="http://tempuri.org/IExamService/GetSubject_ListResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetSubject_List(string lic_type_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetHolidayList", ReplyAction="http://tempuri.org/IExamService/GetHolidayListResponse")]
        IAS.DTO.ResponseService<IAS.DTO.GBHoliday[]> GetHolidayList(int page, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetHoliday", ReplyAction="http://tempuri.org/IExamService/GetHolidayResponse")]
        IAS.DTO.ResponseService<IAS.DTO.GBHoliday> GetHoliday(string date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/AddHoliday", ReplyAction="http://tempuri.org/IExamService/AddHolidayResponse")]
        IAS.DTO.ResponseService<string> AddHoliday(IAS.DTO.GBHoliday holiday);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/DeleteHoliday", ReplyAction="http://tempuri.org/IExamService/DeleteHolidayResponse")]
        IAS.DTO.ResponseService<string> DeleteHoliday(string date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/UpdateHoliday", ReplyAction="http://tempuri.org/IExamService/UpdateHolidayResponse")]
        IAS.DTO.ResponseService<string> UpdateHoliday(IAS.DTO.GBHoliday holidate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/SearchHoliday", ReplyAction="http://tempuri.org/IExamService/SearchHolidayResponse")]
        IAS.DTO.ResponseService<IAS.DTO.GBHoliday[]> SearchHoliday(string search, int page, int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetHolidayListByYearMonth", ReplyAction="http://tempuri.org/IExamService/GetHolidayListByYearMonthResponse")]
        IAS.DTO.ResponseService<IAS.DTO.GBHoliday[]> GetHolidayListByYearMonth(string yearMonth);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetLicensetypeList", ReplyAction="http://tempuri.org/IExamService/GetLicensetypeListResponse")]
        IAS.DTO.ResponseService<IAS.DTO.LicenseTyperDropDrown[]> GetLicensetypeList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetExamRoom", ReplyAction="http://tempuri.org/IExamService/GetExamRoomResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetExamRoom();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/InsertExamRoom", ReplyAction="http://tempuri.org/IExamService/InsertExamRoomResponse")]
        IAS.DTO.ResponseMessage<bool> InsertExamRoom(IAS.DTO.ConfigExamRoom ent, IAS.DTO.UserProfile userProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/UpdateExamRoom", ReplyAction="http://tempuri.org/IExamService/UpdateExamRoomResponse")]
        IAS.DTO.ResponseMessage<bool> UpdateExamRoom(IAS.DTO.ConfigExamRoom ent, IAS.DTO.UserProfile userProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetSubjectrList", ReplyAction="http://tempuri.org/IExamService/GetSubjectrListResponse")]
        IAS.DTO.ResponseService<IAS.DTO.Subjectr[]> GetSubjectrList(string licensecode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/AddSubject", ReplyAction="http://tempuri.org/IExamService/AddSubjectResponse")]
        IAS.DTO.ResponseService<string> AddSubject(IAS.DTO.Subjectr subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/UpdateSubject", ReplyAction="http://tempuri.org/IExamService/UpdateSubjectResponse")]
        IAS.DTO.ResponseService<string> UpdateSubject(IAS.DTO.Subjectr subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/DeleteSubject", ReplyAction="http://tempuri.org/IExamService/DeleteSubjectResponse")]
        IAS.DTO.ResponseService<string> DeleteSubject(IAS.DTO.Subjectr subject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetAgentTypeList", ReplyAction="http://tempuri.org/IExamService/GetAgentTypeListResponse")]
        IAS.DTO.ResponseService<IAS.DTO.AgentType[]> GetAgentTypeList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetLicenseList", ReplyAction="http://tempuri.org/IExamService/GetLicenseListResponse")]
        IAS.DTO.ResponseService<IAS.DTO.LicenseTypet[]> GetLicenseList(string agentType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/UpdateLicenseType", ReplyAction="http://tempuri.org/IExamService/UpdateLicenseTypeResponse")]
        IAS.DTO.ResponseService<string> UpdateLicenseType(IAS.DTO.LicenseTypet licensetype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/AddLicenseType", ReplyAction="http://tempuri.org/IExamService/AddLicenseTypeResponse")]
        IAS.DTO.ResponseService<string> AddLicenseType(IAS.DTO.LicenseTypet licensetype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/DeleteLicensetype", ReplyAction="http://tempuri.org/IExamService/DeleteLicensetypeResponse")]
        IAS.DTO.ResponseService<string> DeleteLicensetype(string licensecode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetExamRoomByPlaceCode", ReplyAction="http://tempuri.org/IExamService/GetExamRoomByPlaceCodeResponse")]
        IAS.DTO.ResponseService<IAS.DTO.DataItem[]> GetExamRoomByPlaceCode(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetSeatAmountRoom", ReplyAction="http://tempuri.org/IExamService/GetSeatAmountRoomResponse")]
        IAS.DTO.ResponseService<string> GetSeatAmountRoom(string roomcode, string ExamPlace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetExamRoomByLicenseNo", ReplyAction="http://tempuri.org/IExamService/GetExamRoomByLicenseNoResponse")]
        IAS.DTO.ResponseService<IAS.DTO.ExamSubLicense[]> GetExamRoomByLicenseNo(string No, string Place);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/InsertExamAndRoom", ReplyAction="http://tempuri.org/IExamService/InsertExamAndRoomResponse")]
        IAS.DTO.ResponseMessage<bool> InsertExamAndRoom(IAS.DTO.ExamSchedule ent, IAS.DTO.ExamSubLicense[] entsub);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/UpdateExamAndRoom", ReplyAction="http://tempuri.org/IExamService/UpdateExamAndRoomResponse")]
        IAS.DTO.ResponseMessage<bool> UpdateExamAndRoom(IAS.DTO.ExamSchedule ent, IAS.DTO.ExamSubLicense[] entsub);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetExamRoomByPlaceCodeAndTimeCode", ReplyAction="http://tempuri.org/IExamService/GetExamRoomByPlaceCodeAndTimeCodeResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetExamRoomByPlaceCodeAndTimeCode(string code, string Timetxt, string dDate, IAS.DTO.ExamSubLicense[] oldCode, bool Del, string testingNoo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetExamTime", ReplyAction="http://tempuri.org/IExamService/GetExamTimeResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetExamTime(string st_hr, string st_min, string en_hr, string en_min, int pageNo, int recordPerPage, bool Count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetCountSearch", ReplyAction="http://tempuri.org/IExamService/GetCountSearchResponse")]
        IAS.DTO.ResponseService<string> GetCountSearch(string st_hr, string st_min, string en_hr, string en_min);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/Add_Time", ReplyAction="http://tempuri.org/IExamService/Add_TimeResponse")]
        IAS.DTO.ResponseMessage<bool> Add_Time(string st_hr, string st_min, string en_hr, string en_min, string userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/Del_Time", ReplyAction="http://tempuri.org/IExamService/Del_TimeResponse")]
        IAS.DTO.ResponseMessage<bool> Del_Time(string Key, string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/getExamTimeShow", ReplyAction="http://tempuri.org/IExamService/getExamTimeShowResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> getExamTimeShow(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetAssoLicense", ReplyAction="http://tempuri.org/IExamService/GetAssoLicenseResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetAssoLicense(string AssoCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/DelExamRoom", ReplyAction="http://tempuri.org/IExamService/DelExamRoomResponse")]
        IAS.DTO.ResponseMessage<bool> DelExamRoom(string Room);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetPlaceDetailByPlaceCode_noCheckActive", ReplyAction="http://tempuri.org/IExamService/GetPlaceDetailByPlaceCode_noCheckActiveResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetPlaceDetailByPlaceCode_noCheckActive(string PlaceCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetSubjectGroup", ReplyAction="http://tempuri.org/IExamService/GetSubjectGroupResponse")]
        IAS.DTO.ResponseService<IAS.DTO.Subjectr[]> GetSubjectGroup(string p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/AddExamGroup", ReplyAction="http://tempuri.org/IExamService/AddExamGroupResponse")]
        IAS.DTO.ResponseService<string> AddExamGroup(IAS.DTO.ConditionGroup conditiongroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetSubjectGroupSearch", ReplyAction="http://tempuri.org/IExamService/GetSubjectGroupSearchResponse")]
        IAS.DTO.ResponePage<IAS.DTO.SubjectGroup[]> GetSubjectGroupSearch(string p, int Page, int record);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetSubjectInGroup", ReplyAction="http://tempuri.org/IExamService/GetSubjectInGroupResponse")]
        IAS.DTO.ResponseService<IAS.DTO.SubjectGroupD[]> GetSubjectInGroup(string p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetSubjectGroupList", ReplyAction="http://tempuri.org/IExamService/GetSubjectGroupListResponse")]
        IAS.DTO.ResponseService<IAS.DTO.GroupSubject[]> GetSubjectGroupList(string p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/ActiveConditionGroup", ReplyAction="http://tempuri.org/IExamService/ActiveConditionGroupResponse")]
        IAS.DTO.ResponseService<string> ActiveConditionGroup(string p, string license);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/AddSubjectGroup", ReplyAction="http://tempuri.org/IExamService/AddSubjectGroupResponse")]
        IAS.DTO.ResponseService<string> AddSubjectGroup(IAS.DTO.GroupSubject examgroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/DeleteSubjectGroup", ReplyAction="http://tempuri.org/IExamService/DeleteSubjectGroupResponse")]
        IAS.DTO.ResponseService<string> DeleteSubjectGroup(string p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/UpdateSubjectGroup", ReplyAction="http://tempuri.org/IExamService/UpdateSubjectGroupResponse")]
        IAS.DTO.ResponseService<string> UpdateSubjectGroup(IAS.DTO.GroupSubject examgroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GenLicenseNo", ReplyAction="http://tempuri.org/IExamService/GenLicenseNoResponse")]
        IAS.DTO.ResponseService<string> GenLicenseNo(string PlaceCode, string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/SaveSetApplicantRoom", ReplyAction="http://tempuri.org/IExamService/SaveSetApplicantRoomResponse")]
        IAS.DTO.ResponseMessage<bool> SaveSetApplicantRoom(IAS.DTO.SaveSetApplicantRoom lr, string Event);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetCourseNumber", ReplyAction="http://tempuri.org/IExamService/GetCourseNumberResponse")]
        IAS.DTO.ResponseService<string> GetCourseNumber(string licenseCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/SaveDeleteApplicantRoom", ReplyAction="http://tempuri.org/IExamService/SaveDeleteApplicantRoomResponse")]
        IAS.DTO.ResponseMessage<bool> SaveDeleteApplicantRoom(string testing_no, string ExampleaceCode, string USERID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetExamPlaceAndDetailFromProvinceAndGroupCode", ReplyAction="http://tempuri.org/IExamService/GetExamPlaceAndDetailFromProvinceAndGroupCodeResp" +
            "onse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetExamPlaceAndDetailFromProvinceAndGroupCode(string province, string placeG, string Group, int pageNo, int recordPerPage, bool Count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/SavePlace", ReplyAction="http://tempuri.org/IExamService/SavePlaceResponse")]
        IAS.DTO.ResponseMessage<bool> SavePlace(string PlaceG, string Province, string Code, string Place, string Seat, bool Free, string UserID, bool Addnew, string GroupType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/DelPlace", ReplyAction="http://tempuri.org/IExamService/DelPlaceResponse")]
        IAS.DTO.ResponseMessage<bool> DelPlace(string Code, string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetGVExamRoomByPlaceCode", ReplyAction="http://tempuri.org/IExamService/GetGVExamRoomByPlaceCodeResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetGVExamRoomByPlaceCode(string code, int pageNo, int recordPerPage, bool Count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/SumSeat", ReplyAction="http://tempuri.org/IExamService/SumSeatResponse")]
        IAS.DTO.ResponseService<string> SumSeat(string placeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/CountCountSeatUse", ReplyAction="http://tempuri.org/IExamService/CountCountSeatUseResponse")]
        IAS.DTO.ResponseService<string> CountCountSeatUse(string testing_no);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/CheckUsedPlaceGroup", ReplyAction="http://tempuri.org/IExamService/CheckUsedPlaceGroupResponse")]
        IAS.DTO.ResponseMessage<bool> CheckUsedPlaceGroup(string ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetddlGroupType", ReplyAction="http://tempuri.org/IExamService/GetddlGroupTypeResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetddlGroupType(string PlaceCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/SumSeatFromPlace", ReplyAction="http://tempuri.org/IExamService/SumSeatFromPlaceResponse")]
        IAS.DTO.ResponseService<string> SumSeatFromPlace(string ID, string Room);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetTestingNoFrom_fileImport", ReplyAction="http://tempuri.org/IExamService/GetTestingNoFrom_fileImportResponse")]
        string GetTestingNoFrom_fileImport(IAS.DTO.ExamHeaderResultTemp head);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/ManageApplicantIn_OutRoom", ReplyAction="http://tempuri.org/IExamService/ManageApplicantIn_OutRoomResponse")]
        IAS.DTO.ResponseService<IAS.DTO.ConfigEntity[]> ManageApplicantIn_OutRoom();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/UpdateManageApplicantIn_OutRoom", ReplyAction="http://tempuri.org/IExamService/UpdateManageApplicantIn_OutRoomResponse")]
        IAS.DTO.ResponseMessage<bool> UpdateManageApplicantIn_OutRoom(IAS.DTO.ConfigEntity[] configs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetExamStatistic", ReplyAction="http://tempuri.org/IExamService/GetExamStatisticResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetExamStatistic(string LicenseType, System.Nullable<System.DateTime> DateStart, System.Nullable<System.DateTime> DateEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/UpdateExamCondition", ReplyAction="http://tempuri.org/IExamService/UpdateExamConditionResponse")]
        IAS.DTO.ResponseMessage<bool> UpdateExamCondition(IAS.DTO.ExamLicense[] exam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetExamLicenseByCriteria", ReplyAction="http://tempuri.org/IExamService/GetExamLicenseByCriteriaResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetExamLicenseByCriteria(string testingNo, string testingDate, int resultPage, int PageSize, bool CountAgain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/IsCanSeatRemainSingle", ReplyAction="http://tempuri.org/IExamService/IsCanSeatRemainSingleResponse")]
        IAS.DTO.ResponseMessage<bool> IsCanSeatRemainSingle(string testingNo, string examPlaceCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/CarlendarExamInit", ReplyAction="http://tempuri.org/IExamService/CarlendarExamInitResponse")]
        IAS.DTO.ResponseService<IAS.DTO.Exams.CarlendarExamInitResponse> CarlendarExamInit(IAS.DTO.Exams.CarlendarExamInitRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExamService/GetExamCarlenderByCriteria", ReplyAction="http://tempuri.org/IExamService/GetExamCarlenderByCriteriaResponse")]
        IAS.DTO.ResponseService<IAS.DTO.Exams.GetExamByCriteriaResponse> GetExamCarlenderByCriteria(IAS.DTO.Exams.GetExamByCriteriaRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExamServiceChannel : IAS.BLL.ExamService.IExamService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExamServiceClient : System.ServiceModel.ClientBase<IAS.BLL.ExamService.IExamService>, IAS.BLL.ExamService.IExamService {
        
        public ExamServiceClient() {
        }
        
        public ExamServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExamServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExamServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExamServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.Exams.GetExamScheduleByCriteriaResponse> GetExamScheduleByCriteria(IAS.DTO.Exams.GetExamScheduleByCriteriaRequest request) {
            return base.Channel.GetExamScheduleByCriteria(request);
        }
        
        public IAS.DTO.ResponseMessage<bool> InsertExam(IAS.DTO.ExamSchedule ent) {
            return base.Channel.InsertExam(ent);
        }
        
        public IAS.DTO.ResponseMessage<bool> UpdateExam(IAS.DTO.ExamSchedule ent) {
            return base.Channel.UpdateExam(ent);
        }
        
        public IAS.DTO.ResponseMessage<bool> DeleteExam(string testingNo, string examPlaceCode) {
            return base.Channel.DeleteExam(testingNo, examPlaceCode);
        }
        
        public IAS.DTO.ResponseService<string> GetSeatAmount(string examPlaceCode) {
            return base.Channel.GetSeatAmount(examPlaceCode);
        }
        
        public IAS.DTO.ResponseService<string> GetExamFee() {
            return base.Channel.GetExamFee();
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetExamByCriteria(string examPlaceGroupCode, string examPlaceCode, string licenseTypeCode, string agentType, string yearMonth, string timeCode, string testingDate, int resultPage, int PageSize, bool CountAgain, string Owner) {
            return base.Channel.GetExamByCriteria(examPlaceGroupCode, examPlaceCode, licenseTypeCode, agentType, yearMonth, timeCode, testingDate, resultPage, PageSize, CountAgain, Owner);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.ExamSchedule> GetExamByTestingNoAndPlaceCode(string testingNo, string placeCode) {
            return base.Channel.GetExamByTestingNoAndPlaceCode(testingNo, placeCode);
        }
        
        public IAS.DTO.ResponseService<System.DateTime[]> GetExamByYearMonth(string yearMonth) {
            return base.Channel.GetExamByYearMonth(yearMonth);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.ExamSchedule> GetExamByTestingNo(string testingNo) {
            return base.Channel.GetExamByTestingNo(testingNo);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.UploadResult<IAS.DTO.UploadResultHeader, IAS.DTO.ExamResultTemp>> InsertAndCheckExamResultUpload(string fileName, string userId, string Default_TESTING_NO) {
            return base.Channel.InsertAndCheckExamResultUpload(fileName, userId, Default_TESTING_NO);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.ExamResultTempEdit> GetExamResultTempEdit(string uploadGroupNo, string seqNo) {
            return base.Channel.GetExamResultTempEdit(uploadGroupNo, seqNo);
        }
        
        public IAS.DTO.ResponseMessage<bool> UpdateExamResultEdit(IAS.DTO.ExamResultTempEdit exam) {
            return base.Channel.UpdateExamResultEdit(exam);
        }
        
        public IAS.DTO.ResponseMessage<bool> ExamResultUploadToSubmitNew(string groupId, string userId, System.Nullable<System.DateTime> expireDate, string TestingNo) {
            return base.Channel.ExamResultUploadToSubmitNew(groupId, userId, expireDate, TestingNo);
        }
        
        public IAS.DTO.ResponseMessage<bool> CanChangeExam(string testingNo, string examPlaceCode) {
            return base.Channel.CanChangeExam(testingNo, examPlaceCode);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.UploadResult<IAS.DTO.UploadHeader, IAS.DTO.ExamResultTemp>> GetExamResultUploadByGroupId(string groupId) {
            return base.Channel.GetExamResultUploadByGroupId(groupId);
        }
        
        public IAS.DTO.ResponseMessage<bool> IsRightTestingNo(string testingNo) {
            return base.Channel.IsRightTestingNo(testingNo);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetExamByTestCenter(string examPlaceGroupCode, string examPlaceCode, string licenseTypeCode, string yearMonth, string timeCode, string testingDate, string compcode) {
            return base.Channel.GetExamByTestCenter(examPlaceGroupCode, examPlaceCode, licenseTypeCode, yearMonth, timeCode, testingDate, compcode);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetExamMonthByCriteria(string examPlaceGroupCode, string examPlaceCode, string licenseTypeCode, string yearMonth, string timeCode, string testingDate, string Owner) {
            return base.Channel.GetExamMonthByCriteria(examPlaceGroupCode, examPlaceCode, licenseTypeCode, yearMonth, timeCode, testingDate, Owner);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetExamByCriteriaDefault(string examPlaceGroupCode, string examPlaceCode, string licenseTypeCode, string agentType, string yearMonth, string timeCode, string testingDate, int resultPage, int PageSize, bool CountAgain, string Owner) {
            return base.Channel.GetExamByCriteriaDefault(examPlaceGroupCode, examPlaceCode, licenseTypeCode, agentType, yearMonth, timeCode, testingDate, resultPage, PageSize, CountAgain, Owner);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetSubject_List(string lic_type_code) {
            return base.Channel.GetSubject_List(lic_type_code);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.GBHoliday[]> GetHolidayList(int page, int count) {
            return base.Channel.GetHolidayList(page, count);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.GBHoliday> GetHoliday(string date) {
            return base.Channel.GetHoliday(date);
        }
        
        public IAS.DTO.ResponseService<string> AddHoliday(IAS.DTO.GBHoliday holiday) {
            return base.Channel.AddHoliday(holiday);
        }
        
        public IAS.DTO.ResponseService<string> DeleteHoliday(string date) {
            return base.Channel.DeleteHoliday(date);
        }
        
        public IAS.DTO.ResponseService<string> UpdateHoliday(IAS.DTO.GBHoliday holidate) {
            return base.Channel.UpdateHoliday(holidate);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.GBHoliday[]> SearchHoliday(string search, int page, int count) {
            return base.Channel.SearchHoliday(search, page, count);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.GBHoliday[]> GetHolidayListByYearMonth(string yearMonth) {
            return base.Channel.GetHolidayListByYearMonth(yearMonth);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.LicenseTyperDropDrown[]> GetLicensetypeList() {
            return base.Channel.GetLicensetypeList();
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetExamRoom() {
            return base.Channel.GetExamRoom();
        }
        
        public IAS.DTO.ResponseMessage<bool> InsertExamRoom(IAS.DTO.ConfigExamRoom ent, IAS.DTO.UserProfile userProfile) {
            return base.Channel.InsertExamRoom(ent, userProfile);
        }
        
        public IAS.DTO.ResponseMessage<bool> UpdateExamRoom(IAS.DTO.ConfigExamRoom ent, IAS.DTO.UserProfile userProfile) {
            return base.Channel.UpdateExamRoom(ent, userProfile);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.Subjectr[]> GetSubjectrList(string licensecode) {
            return base.Channel.GetSubjectrList(licensecode);
        }
        
        public IAS.DTO.ResponseService<string> AddSubject(IAS.DTO.Subjectr subject) {
            return base.Channel.AddSubject(subject);
        }
        
        public IAS.DTO.ResponseService<string> UpdateSubject(IAS.DTO.Subjectr subject) {
            return base.Channel.UpdateSubject(subject);
        }
        
        public IAS.DTO.ResponseService<string> DeleteSubject(IAS.DTO.Subjectr subject) {
            return base.Channel.DeleteSubject(subject);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.AgentType[]> GetAgentTypeList() {
            return base.Channel.GetAgentTypeList();
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.LicenseTypet[]> GetLicenseList(string agentType) {
            return base.Channel.GetLicenseList(agentType);
        }
        
        public IAS.DTO.ResponseService<string> UpdateLicenseType(IAS.DTO.LicenseTypet licensetype) {
            return base.Channel.UpdateLicenseType(licensetype);
        }
        
        public IAS.DTO.ResponseService<string> AddLicenseType(IAS.DTO.LicenseTypet licensetype) {
            return base.Channel.AddLicenseType(licensetype);
        }
        
        public IAS.DTO.ResponseService<string> DeleteLicensetype(string licensecode) {
            return base.Channel.DeleteLicensetype(licensecode);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.DataItem[]> GetExamRoomByPlaceCode(string code) {
            return base.Channel.GetExamRoomByPlaceCode(code);
        }
        
        public IAS.DTO.ResponseService<string> GetSeatAmountRoom(string roomcode, string ExamPlace) {
            return base.Channel.GetSeatAmountRoom(roomcode, ExamPlace);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.ExamSubLicense[]> GetExamRoomByLicenseNo(string No, string Place) {
            return base.Channel.GetExamRoomByLicenseNo(No, Place);
        }
        
        public IAS.DTO.ResponseMessage<bool> InsertExamAndRoom(IAS.DTO.ExamSchedule ent, IAS.DTO.ExamSubLicense[] entsub) {
            return base.Channel.InsertExamAndRoom(ent, entsub);
        }
        
        public IAS.DTO.ResponseMessage<bool> UpdateExamAndRoom(IAS.DTO.ExamSchedule ent, IAS.DTO.ExamSubLicense[] entsub) {
            return base.Channel.UpdateExamAndRoom(ent, entsub);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetExamRoomByPlaceCodeAndTimeCode(string code, string Timetxt, string dDate, IAS.DTO.ExamSubLicense[] oldCode, bool Del, string testingNoo) {
            return base.Channel.GetExamRoomByPlaceCodeAndTimeCode(code, Timetxt, dDate, oldCode, Del, testingNoo);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetExamTime(string st_hr, string st_min, string en_hr, string en_min, int pageNo, int recordPerPage, bool Count) {
            return base.Channel.GetExamTime(st_hr, st_min, en_hr, en_min, pageNo, recordPerPage, Count);
        }
        
        public IAS.DTO.ResponseService<string> GetCountSearch(string st_hr, string st_min, string en_hr, string en_min) {
            return base.Channel.GetCountSearch(st_hr, st_min, en_hr, en_min);
        }
        
        public IAS.DTO.ResponseMessage<bool> Add_Time(string st_hr, string st_min, string en_hr, string en_min, string userID) {
            return base.Channel.Add_Time(st_hr, st_min, en_hr, en_min, userID);
        }
        
        public IAS.DTO.ResponseMessage<bool> Del_Time(string Key, string UserID) {
            return base.Channel.Del_Time(Key, UserID);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> getExamTimeShow(string ID) {
            return base.Channel.getExamTimeShow(ID);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetAssoLicense(string AssoCode) {
            return base.Channel.GetAssoLicense(AssoCode);
        }
        
        public IAS.DTO.ResponseMessage<bool> DelExamRoom(string Room) {
            return base.Channel.DelExamRoom(Room);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetPlaceDetailByPlaceCode_noCheckActive(string PlaceCode) {
            return base.Channel.GetPlaceDetailByPlaceCode_noCheckActive(PlaceCode);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.Subjectr[]> GetSubjectGroup(string p) {
            return base.Channel.GetSubjectGroup(p);
        }
        
        public IAS.DTO.ResponseService<string> AddExamGroup(IAS.DTO.ConditionGroup conditiongroup) {
            return base.Channel.AddExamGroup(conditiongroup);
        }
        
        public IAS.DTO.ResponePage<IAS.DTO.SubjectGroup[]> GetSubjectGroupSearch(string p, int Page, int record) {
            return base.Channel.GetSubjectGroupSearch(p, Page, record);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.SubjectGroupD[]> GetSubjectInGroup(string p) {
            return base.Channel.GetSubjectInGroup(p);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.GroupSubject[]> GetSubjectGroupList(string p) {
            return base.Channel.GetSubjectGroupList(p);
        }
        
        public IAS.DTO.ResponseService<string> ActiveConditionGroup(string p, string license) {
            return base.Channel.ActiveConditionGroup(p, license);
        }
        
        public IAS.DTO.ResponseService<string> AddSubjectGroup(IAS.DTO.GroupSubject examgroup) {
            return base.Channel.AddSubjectGroup(examgroup);
        }
        
        public IAS.DTO.ResponseService<string> DeleteSubjectGroup(string p) {
            return base.Channel.DeleteSubjectGroup(p);
        }
        
        public IAS.DTO.ResponseService<string> UpdateSubjectGroup(IAS.DTO.GroupSubject examgroup) {
            return base.Channel.UpdateSubjectGroup(examgroup);
        }
        
        public IAS.DTO.ResponseService<string> GenLicenseNo(string PlaceCode, string UserId) {
            return base.Channel.GenLicenseNo(PlaceCode, UserId);
        }
        
        public IAS.DTO.ResponseMessage<bool> SaveSetApplicantRoom(IAS.DTO.SaveSetApplicantRoom lr, string Event) {
            return base.Channel.SaveSetApplicantRoom(lr, Event);
        }
        
        public IAS.DTO.ResponseService<string> GetCourseNumber(string licenseCode) {
            return base.Channel.GetCourseNumber(licenseCode);
        }
        
        public IAS.DTO.ResponseMessage<bool> SaveDeleteApplicantRoom(string testing_no, string ExampleaceCode, string USERID) {
            return base.Channel.SaveDeleteApplicantRoom(testing_no, ExampleaceCode, USERID);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetExamPlaceAndDetailFromProvinceAndGroupCode(string province, string placeG, string Group, int pageNo, int recordPerPage, bool Count) {
            return base.Channel.GetExamPlaceAndDetailFromProvinceAndGroupCode(province, placeG, Group, pageNo, recordPerPage, Count);
        }
        
        public IAS.DTO.ResponseMessage<bool> SavePlace(string PlaceG, string Province, string Code, string Place, string Seat, bool Free, string UserID, bool Addnew, string GroupType) {
            return base.Channel.SavePlace(PlaceG, Province, Code, Place, Seat, Free, UserID, Addnew, GroupType);
        }
        
        public IAS.DTO.ResponseMessage<bool> DelPlace(string Code, string UserID) {
            return base.Channel.DelPlace(Code, UserID);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetGVExamRoomByPlaceCode(string code, int pageNo, int recordPerPage, bool Count) {
            return base.Channel.GetGVExamRoomByPlaceCode(code, pageNo, recordPerPage, Count);
        }
        
        public IAS.DTO.ResponseService<string> SumSeat(string placeCode) {
            return base.Channel.SumSeat(placeCode);
        }
        
        public IAS.DTO.ResponseService<string> CountCountSeatUse(string testing_no) {
            return base.Channel.CountCountSeatUse(testing_no);
        }
        
        public IAS.DTO.ResponseMessage<bool> CheckUsedPlaceGroup(string ID) {
            return base.Channel.CheckUsedPlaceGroup(ID);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetddlGroupType(string PlaceCode) {
            return base.Channel.GetddlGroupType(PlaceCode);
        }
        
        public IAS.DTO.ResponseService<string> SumSeatFromPlace(string ID, string Room) {
            return base.Channel.SumSeatFromPlace(ID, Room);
        }
        
        public string GetTestingNoFrom_fileImport(IAS.DTO.ExamHeaderResultTemp head) {
            return base.Channel.GetTestingNoFrom_fileImport(head);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.ConfigEntity[]> ManageApplicantIn_OutRoom() {
            return base.Channel.ManageApplicantIn_OutRoom();
        }
        
        public IAS.DTO.ResponseMessage<bool> UpdateManageApplicantIn_OutRoom(IAS.DTO.ConfigEntity[] configs) {
            return base.Channel.UpdateManageApplicantIn_OutRoom(configs);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetExamStatistic(string LicenseType, System.Nullable<System.DateTime> DateStart, System.Nullable<System.DateTime> DateEnd) {
            return base.Channel.GetExamStatistic(LicenseType, DateStart, DateEnd);
        }
        
        public IAS.DTO.ResponseMessage<bool> UpdateExamCondition(IAS.DTO.ExamLicense[] exam) {
            return base.Channel.UpdateExamCondition(exam);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetExamLicenseByCriteria(string testingNo, string testingDate, int resultPage, int PageSize, bool CountAgain) {
            return base.Channel.GetExamLicenseByCriteria(testingNo, testingDate, resultPage, PageSize, CountAgain);
        }
        
        public IAS.DTO.ResponseMessage<bool> IsCanSeatRemainSingle(string testingNo, string examPlaceCode) {
            return base.Channel.IsCanSeatRemainSingle(testingNo, examPlaceCode);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.Exams.CarlendarExamInitResponse> CarlendarExamInit(IAS.DTO.Exams.CarlendarExamInitRequest request) {
            return base.Channel.CarlendarExamInit(request);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.Exams.GetExamByCriteriaResponse> GetExamCarlenderByCriteria(IAS.DTO.Exams.GetExamByCriteriaRequest request) {
            return base.Channel.GetExamCarlenderByCriteria(request);
        }
    }
}
