//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IAS.BLL.LicenseService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LicenseService.ILicenseService")]
    public interface ILicenseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetLicenseByCriteria", ReplyAction="http://tempuri.org/ILicenseService/GetLicenseByCriteriaResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetLicenseByCriteria(string licenseNo, string licenseType, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> toDate, string paymentNo, string licenseTypeReceive, IAS.DTO.UserProfile userProfile, int pageNo, int recordPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetPersonalHistoryByIdCard", ReplyAction="http://tempuri.org/ILicenseService/GetPersonalHistoryByIdCardResponse")]
        IAS.DTO.ResponseService<IAS.DTO.PersonalHistory> GetPersonalHistoryByIdCard(string idCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetExamHistoryByIdCard", ReplyAction="http://tempuri.org/ILicenseService/GetExamHistoryByIdCardResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetExamHistoryByIdCard(string idCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetTrainingHistoryBy", ReplyAction="http://tempuri.org/ILicenseService/GetTrainingHistoryByResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetTrainingHistoryBy(string idCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetTrain_1_To_4_ByIdCard", ReplyAction="http://tempuri.org/ILicenseService/GetTrain_1_To_4_ByIdCardResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetTrain_1_To_4_ByIdCard(string idCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetUnitLinkByIdCard", ReplyAction="http://tempuri.org/ILicenseService/GetUnitLinkByIdCardResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetUnitLinkByIdCard(string idCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetRequestLicenseByIdCard", ReplyAction="http://tempuri.org/ILicenseService/GetRequestLicenseByIdCardResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetRequestLicenseByIdCard(string idCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetReceiveLicenseByCriteria", ReplyAction="http://tempuri.org/ILicenseService/GetReceiveLicenseByCriteriaResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetReceiveLicenseByCriteria(string licenseNo, string licenseTypeCode, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/InsertAndCheckReceiveLicenseGroupUpload", ReplyAction="http://tempuri.org/ILicenseService/InsertAndCheckReceiveLicenseGroupUploadRespons" +
            "e")]
        IAS.DTO.ResponseService<IAS.DTO.UploadResult<IAS.DTO.UploadHeader, IAS.DTO.ReceiveLicenseDetail>> InsertAndCheckReceiveLicenseGroupUpload(IAS.DTO.UploadData data, IAS.DTO.CompressFileDetail compressFile, string groupNo, string fileName, string userId, string petitionTypeCode, string licenseTypeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetLicenseVerify", ReplyAction="http://tempuri.org/ILicenseService/GetLicenseVerifyResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetLicenseVerify(string petitionTypeCode, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> toDate, string Compcode, string requestCompCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetLicenseVerifyByRequest", ReplyAction="http://tempuri.org/ILicenseService/GetLicenseVerifyByRequestResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetLicenseVerifyByRequest(string petitionTypeCode, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> toDate, string Compcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetLicenseVerifyDetail", ReplyAction="http://tempuri.org/ILicenseService/GetLicenseVerifyDetailResponse")]
        IAS.DTO.ResponseService<IAS.DTO.LicenseVerifyDetail> GetLicenseVerifyDetail(string groupUploadNo, string seqNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetLicenseVerifyImgDetail", ReplyAction="http://tempuri.org/ILicenseService/GetLicenseVerifyImgDetailResponse")]
        IAS.DTO.ResponseService<IAS.DTO.AttatchFileLicense[]> GetLicenseVerifyImgDetail(string groupUploadNo, string idCard, string CountPage, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/ApproveLicenseVerify", ReplyAction="http://tempuri.org/ILicenseService/ApproveLicenseVerifyResponse")]
        IAS.DTO.ResponseService<string> ApproveLicenseVerify(IAS.DTO.SubmitLicenseVerify[] list, string flgApprove, string ApproveID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/InsertSingleReceiveLicense", ReplyAction="http://tempuri.org/ILicenseService/InsertSingleReceiveLicenseResponse")]
        IAS.DTO.ResponseMessage<bool> InsertSingleReceiveLicense(IAS.DTO.ReceiveLicenseHeader header, IAS.DTO.ReceiveLicenseDetail detail, IAS.DTO.UserProfile userProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/SubmitSingleOrGroupReceiveLicense", ReplyAction="http://tempuri.org/ILicenseService/SubmitSingleOrGroupReceiveLicenseResponse")]
        IAS.DTO.ResponseMessage<bool> SubmitSingleOrGroupReceiveLicense(string groupId, IAS.DTO.AttatchFileLicense[] attachs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/UploadDataLicense", ReplyAction="http://tempuri.org/ILicenseService/UploadDataLicenseResponse")]
        IAS.DTO.ResponseService<IAS.DTO.SummaryReceiveLicense> UploadDataLicense(IAS.DTO.DataLicenseRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/MoveExtachFile", ReplyAction="http://tempuri.org/ILicenseService/MoveExtachFileResponse")]
        IAS.DTO.ResponseService<IAS.DTO.AttatchFileLicense[]> MoveExtachFile(string userId, string targetPath, IAS.DTO.AttachFileDetail[] attachFiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetExamHistoryByID", ReplyAction="http://tempuri.org/ILicenseService/GetExamHistoryByIDResponse")]
        IAS.DTO.ResponseService<IAS.DTO.ExamHistory[]> GetExamHistoryByID(string idCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetExamHistoryByIDWithCondition", ReplyAction="http://tempuri.org/ILicenseService/GetExamHistoryByIDWithConditionResponse")]
        IAS.DTO.ResponseService<IAS.DTO.ExamHistory[]> GetExamHistoryByIDWithCondition(string idCard, string licenseTypeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetTrainingHistoryByID", ReplyAction="http://tempuri.org/ILicenseService/GetTrainingHistoryByIDResponse")]
        IAS.DTO.ResponseService<IAS.DTO.TrainPersonHistory[]> GetTrainingHistoryByID(string idCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetTrainingHistoryByIDWithCondition", ReplyAction="http://tempuri.org/ILicenseService/GetTrainingHistoryByIDWithConditionResponse")]
        IAS.DTO.ResponseService<IAS.DTO.TrainPersonHistory[]> GetTrainingHistoryByIDWithCondition(string idCard, string licenseTypeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetPersonalTrainByCriteria", ReplyAction="http://tempuri.org/ILicenseService/GetPersonalTrainByCriteriaResponse")]
        IAS.DTO.ResponseService<IAS.DTO.TrainPersonHistory> GetPersonalTrainByCriteria(string licenseTypeCode, string pettitionTypeCode, string renewTime, string idCard, string licenseNo, string specialTrainCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetTrain_3_To_7_ByID", ReplyAction="http://tempuri.org/ILicenseService/GetTrain_3_To_7_ByIDResponse")]
        IAS.DTO.ResponseService<IAS.DTO.Tran3To7[]> GetTrain_3_To_7_ByID(string idCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetUnitLinkByID", ReplyAction="http://tempuri.org/ILicenseService/GetUnitLinkByIDResponse")]
        IAS.DTO.ResponseService<IAS.DTO.UnitLink[]> GetUnitLinkByID(string idCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetUnitLinkByIDWithCondition", ReplyAction="http://tempuri.org/ILicenseService/GetUnitLinkByIDWithConditionResponse")]
        IAS.DTO.ResponseService<IAS.DTO.UnitLink[]> GetUnitLinkByIDWithCondition(string idCard, string licenseTypeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetAttatchFileLicenseByPersonId", ReplyAction="http://tempuri.org/ILicenseService/GetAttatchFileLicenseByPersonIdResponse")]
        IAS.DTO.ResponseService<IAS.DTO.PersonAttatchFile[]> GetAttatchFileLicenseByPersonId(string personID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/InsertPersonLicense", ReplyAction="http://tempuri.org/ILicenseService/InsertPersonLicenseResponse")]
        IAS.DTO.ResponseMessage<bool> InsertPersonLicense(IAS.DTO.PersonLicenseHead[] header, IAS.DTO.PersonLicenseDetail[] detail, IAS.DTO.UserProfile userProfile, IAS.DTO.AttatchFileLicense[] files);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetApprocerByDocType", ReplyAction="http://tempuri.org/ILicenseService/GetApprocerByDocTypeResponse")]
        IAS.DTO.ResponseService<IAS.DTO.ApproverDoctype[]> GetApprocerByDocType(string appdocType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GenSEQLicenseDetail", ReplyAction="http://tempuri.org/ILicenseService/GenSEQLicenseDetailResponse")]
        IAS.DTO.ResponseService<IAS.DTO.PersonLicenseDetail[]> GenSEQLicenseDetail(IAS.DTO.PersonLicenseHead uploadGroupNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetLicenseTransaction", ReplyAction="http://tempuri.org/ILicenseService/GetLicenseTransactionResponse")]
        IAS.DTO.ResponseService<IAS.DTO.PersonLicenseTransaction[]> GetLicenseTransaction(IAS.DTO.PersonLicenseHead[] head, IAS.DTO.PersonLicenseDetail[] detail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/SingleLicenseValidation", ReplyAction="http://tempuri.org/ILicenseService/SingleLicenseValidationResponse")]
        IAS.DTO.ResponseMessage<bool> SingleLicenseValidation(IAS.DTO.PersonLicenseHead head, IAS.DTO.PersonLicenseDetail detail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetPaymentLicenseTransaction", ReplyAction="http://tempuri.org/ILicenseService/GetPaymentLicenseTransactionResponse")]
        IAS.DTO.ResponseService<IAS.DTO.PersonLicenseTransaction[]> GetPaymentLicenseTransaction(IAS.DTO.PersonLicenseHead[] head, IAS.DTO.PersonLicenseDetail[] detail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetRequesPersontLicenseByIdCard", ReplyAction="http://tempuri.org/ILicenseService/GetRequesPersontLicenseByIdCardResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetRequesPersontLicenseByIdCard(string idCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetRenewLicneseByIdCard", ReplyAction="http://tempuri.org/ILicenseService/GetRenewLicneseByIdCardResponse")]
        IAS.DTO.ResponseService<IAS.DTO.PersonLicenseTransaction[]> GetRenewLicneseByIdCard(string idCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetRenewLiceneEntityByLicenseNo", ReplyAction="http://tempuri.org/ILicenseService/GetRenewLiceneEntityByLicenseNoResponse")]
        IAS.DTO.ResponseService<IAS.DTO.PersonLicenseTransaction> GetRenewLiceneEntityByLicenseNo(string licenseNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/updateRenewLicense", ReplyAction="http://tempuri.org/ILicenseService/updateRenewLicenseResponse")]
        IAS.DTO.ResponseMessage<bool> updateRenewLicense(IAS.DTO.PersonLicenseHead h, IAS.DTO.PersonLicenseDetail d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/updateLicenseDetail", ReplyAction="http://tempuri.org/ILicenseService/updateLicenseDetailResponse")]
        IAS.DTO.ResponseMessage<bool> updateLicenseDetail(IAS.DTO.PersonLicenseDetail d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetExpiredLicneseByIdCard", ReplyAction="http://tempuri.org/ILicenseService/GetExpiredLicneseByIdCardResponse")]
        IAS.DTO.ResponseService<IAS.DTO.PersonLicenseTransaction[]> GetExpiredLicneseByIdCard(string idCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/getViewPersonLicense", ReplyAction="http://tempuri.org/ILicenseService/getViewPersonLicenseResponse")]
        IAS.DTO.ResponseService<IAS.DTO.PersonLicenseTransaction[]> getViewPersonLicense(string idCard, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetLicenseDetailByUploadGroupNo", ReplyAction="http://tempuri.org/ILicenseService/GetLicenseDetailByUploadGroupNoResponse")]
        IAS.DTO.ResponseService<IAS.DTO.PersonLicenseTransaction> GetLicenseDetailByUploadGroupNo(string upGroupNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetAllLicenseByIDCard", ReplyAction="http://tempuri.org/ILicenseService/GetAllLicenseByIDCardResponse")]
        IAS.DTO.ResponseService<IAS.DTO.PersonLicenseTransaction[]> GetAllLicenseByIDCard(string idCard, string mode, int feemode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetLicenseRenewDateByLicenseNo", ReplyAction="http://tempuri.org/ILicenseService/GetLicenseRenewDateByLicenseNoResponse")]
        IAS.DTO.ResponseService<IAS.DTO.PersonLicenseTransaction> GetLicenseRenewDateByLicenseNo(string licenseNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetLicenseVerifyHead", ReplyAction="http://tempuri.org/ILicenseService/GetLicenseVerifyHeadResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetLicenseVerifyHead(string petitionTypeCode, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> toDate, string Compcode, string requestCompCode, string CountPage, int pageNo, int recordPerPage, string StatusApprove);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetListLicenseDetailVerify", ReplyAction="http://tempuri.org/ILicenseService/GetListLicenseDetailVerifyResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetListLicenseDetailVerify(string uploadGroupNo, string CountPage, int pageNo, int recordPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetVerifyHeadByUploadGroupNo", ReplyAction="http://tempuri.org/ILicenseService/GetVerifyHeadByUploadGroupNoResponse")]
        IAS.DTO.ResponseService<IAS.DTO.VerifyDocumentHeader> GetVerifyHeadByUploadGroupNo(string uploadGroupNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/CheckLicenseDetailVerifyHasNotApprove", ReplyAction="http://tempuri.org/ILicenseService/CheckLicenseDetailVerifyHasNotApproveResponse")]
        IAS.DTO.ResponseMessage<bool> CheckLicenseDetailVerifyHasNotApprove(string uploadGroupNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/ValidateDetail", ReplyAction="http://tempuri.org/ILicenseService/ValidateDetailResponse")]
        IAS.DTO.ResponseMessage<bool> ValidateDetail(string groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetDetail", ReplyAction="http://tempuri.org/ILicenseService/GetDetailResponse")]
        IAS.DTO.ResponseService<IAS.DTO.DetailTemp[]> GetDetail(string groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GenZipFileLicenseRequest", ReplyAction="http://tempuri.org/ILicenseService/GenZipFileLicenseRequestResponse")]
        IAS.DTO.ResponseService<string> GenZipFileLicenseRequest(System.DateTime findDate, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetListLicenseDetailByCriteria", ReplyAction="http://tempuri.org/ILicenseService/GetListLicenseDetailByCriteriaResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetListLicenseDetailByCriteria(string licenseNo, string licenseType, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> toDate, string paymentNo, string licenseTypeReceive, IAS.DTO.UserProfile userProfile, int pageNo, int recordPerPage, string PageCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetResultLicenseVerifyHead", ReplyAction="http://tempuri.org/ILicenseService/GetResultLicenseVerifyHeadResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetResultLicenseVerifyHead(string petitionTypeCode, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> toDate, string Compcode, string CountPage, int pageNo, int recordPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetListLicenseDetailByPersonal", ReplyAction="http://tempuri.org/ILicenseService/GetListLicenseDetailByPersonalResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetListLicenseDetailByPersonal(string licenseNo, string licenseType, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> toDate, string paymentNo, string licenseTypeReceive, IAS.DTO.UserProfile userProfile, int pageNo, int recordPerPage, bool CountAgain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetLicenseVerifyHeadByOIC", ReplyAction="http://tempuri.org/ILicenseService/GetLicenseVerifyHeadByOICResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetLicenseVerifyHeadByOIC(string petitionTypeCode, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> toDate, string requestCompCode, string CountPage, int pageNo, int recordPerPage, string StatusApprove);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetListLicenseDetailAdminByCriteria", ReplyAction="http://tempuri.org/ILicenseService/GetListLicenseDetailAdminByCriteriaResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetListLicenseDetailAdminByCriteria(string licenseNo, string licenseType, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> toDate, string paymentNo, string licenseTypeReceive, IAS.DTO.UserProfile userProfile, int pageNo, int recordPerPage, string PageCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GETGBHoliday", ReplyAction="http://tempuri.org/ILicenseService/GETGBHolidayResponse")]
        IAS.DTO.ResponseService<IAS.DTO.GBHoliday[]> GETGBHoliday(string date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetEditLicenseHead", ReplyAction="http://tempuri.org/ILicenseService/GetEditLicenseHeadResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetEditLicenseHead(string petitionTypeCode, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> toDate, string Compcode, string CountPage, int pageNo, int recordPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetPropLiecense", ReplyAction="http://tempuri.org/ILicenseService/GetPropLiecenseResponse")]
        IAS.DTO.ResponseService<IAS.DTO.ValidateLicense[]> GetPropLiecense(string licenseType, string pettionType, int renewTime, int groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/ChkSpecialExam", ReplyAction="http://tempuri.org/ILicenseService/ChkSpecialExamResponse")]
        IAS.DTO.ResponseMessage<bool> ChkSpecialExam(string[] fileType, string licenseType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetRenewTimebyLicenseNo", ReplyAction="http://tempuri.org/ILicenseService/GetRenewTimebyLicenseNoResponse")]
        IAS.DTO.ResponseMessage<int> GetRenewTimebyLicenseNo(string licenseNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/CheckSpecial", ReplyAction="http://tempuri.org/ILicenseService/CheckSpecialResponse")]
        IAS.DTO.ResponseMessage<bool> CheckSpecial(string idCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetSpecialTempTrainById", ReplyAction="http://tempuri.org/ILicenseService/GetSpecialTempTrainByIdResponse")]
        IAS.DTO.ResponseService<IAS.DTO.TrainSpecial[]> GetSpecialTempTrainById(string idCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetSpecialTempExamById", ReplyAction="http://tempuri.org/ILicenseService/GetSpecialTempExamByIdResponse")]
        IAS.DTO.ResponseService<IAS.DTO.ExamSpecial[]> GetSpecialTempExamById(string idCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/ValidateProp", ReplyAction="http://tempuri.org/ILicenseService/ValidatePropResponse")]
        IAS.DTO.ResponseMessage<bool> ValidateProp(string groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/LicenseRevokedValidation", ReplyAction="http://tempuri.org/ILicenseService/LicenseRevokedValidationResponse")]
        IAS.DTO.ResponseMessage<bool> LicenseRevokedValidation(string[] license, string licenseTypeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetRenewLicenseQuick", ReplyAction="http://tempuri.org/ILicenseService/GetRenewLicenseQuickResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetRenewLicenseQuick(string PetitionType, System.Nullable<System.DateTime> DateStart, System.Nullable<System.DateTime> DateEnd, string CompCode, string Days);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetPersonalLicenseApprover", ReplyAction="http://tempuri.org/ILicenseService/GetPersonalLicenseApproverResponse")]
        IAS.DTO.ResponseService<IAS.DTO.PersonLicenseApprover[]> GetPersonalLicenseApprover(string licenseType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetLicenseRequestOicApprove", ReplyAction="http://tempuri.org/ILicenseService/GetLicenseRequestOicApproveResponse")]
        IAS.DTO.ResponseService<System.DateTime[]> GetLicenseRequestOicApprove(IAS.DTO.RangeDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetMoveCompanyIn", ReplyAction="http://tempuri.org/ILicenseService/GetMoveCompanyInResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetMoveCompanyIn(string LicenseType, string CompCode, System.DateTime DateStart, System.DateTime DateEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetMoveCompanyOut", ReplyAction="http://tempuri.org/ILicenseService/GetMoveCompanyOutResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetMoveCompanyOut(string LicenseType, string CompCode, System.DateTime DateStart, System.DateTime DateEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetLicenseStatisticsReport", ReplyAction="http://tempuri.org/ILicenseService/GetLicenseStatisticsReportResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetLicenseStatisticsReport(string LicenseTypeCode, string StartDate1, string EndDate1, string StartDate2, string EndDate2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetSumLicenseStatisticsReport", ReplyAction="http://tempuri.org/ILicenseService/GetSumLicenseStatisticsReportResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetSumLicenseStatisticsReport(string StartDate1, string EndDate1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetTopCompanyMoveOut", ReplyAction="http://tempuri.org/ILicenseService/GetTopCompanyMoveOutResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetTopCompanyMoveOut(string LicenseType, System.Nullable<System.DateTime> DateStart, System.Nullable<System.DateTime> DateEnd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetIndexSubPaymentH", ReplyAction="http://tempuri.org/ILicenseService/GetIndexSubPaymentHResponse")]
        IAS.DTO.ResponseService<IAS.DTO.SubPaymentHead[]> GetIndexSubPaymentH(string groupReqNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetIndexSubPaymentD", ReplyAction="http://tempuri.org/ILicenseService/GetIndexSubPaymentDResponse")]
        IAS.DTO.ResponseService<IAS.DTO.SubPaymentDetail[]> GetIndexSubPaymentD(string headReqNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetIndexLicenseD", ReplyAction="http://tempuri.org/ILicenseService/GetIndexLicenseDResponse")]
        IAS.DTO.ResponseService<IAS.DTO.PersonLicenseDetail[]> GetIndexLicenseD(string uploadGroupNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetReplacementReport", ReplyAction="http://tempuri.org/ILicenseService/GetReplacementReportResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetReplacementReport(string LicenseTypeCode, string Compcode, string Replacement, string StartDate, string EndDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetLincse0304", ReplyAction="http://tempuri.org/ILicenseService/GetLincse0304Response")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetLincse0304(string lincense);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/AddLincse0304", ReplyAction="http://tempuri.org/ILicenseService/AddLincse0304Response")]
        IAS.DTO.ResponseService<string> AddLincse0304(System.Collections.Generic.Dictionary<string, string> lincense);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetLicenseConfigByPetition", ReplyAction="http://tempuri.org/ILicenseService/GetLicenseConfigByPetitionResponse")]
        IAS.DTO.ResponseService<IAS.DTO.ConfigDocument[]> GetLicenseConfigByPetition(string petitionType, string licenseType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetAgentCheckTrain", ReplyAction="http://tempuri.org/ILicenseService/GetAgentCheckTrainResponse")]
        IAS.DTO.ResponseMessage<bool> GetAgentCheckTrain(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetObtainLicenseByIdCard", ReplyAction="http://tempuri.org/ILicenseService/GetObtainLicenseByIdCardResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetObtainLicenseByIdCard(string idCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GetLicenseDetailByCriteria", ReplyAction="http://tempuri.org/ILicenseService/GetLicenseDetailByCriteriaResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetLicenseDetailByCriteria(System.DateTime dateStart, System.DateTime dateEnd, string IdCardNo, string Names, string Lastname, string LicenseType, string CompCode, int Page, int RowPerPage, bool isCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/GenZipFileLicenseByIdCardNo", ReplyAction="http://tempuri.org/ILicenseService/GenZipFileLicenseByIdCardNoResponse")]
        IAS.DTO.ResponseService<string> GenZipFileLicenseByIdCardNo(IAS.DTO.GenLicenseDetail[] LicenseDetail, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicenseService/ChkLicenseAboutActive", ReplyAction="http://tempuri.org/ILicenseService/ChkLicenseAboutActiveResponse")]
        IAS.DTO.ResponseMessage<bool> ChkLicenseAboutActive(string idCard, string licenseType);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILicenseServiceChannel : IAS.BLL.LicenseService.ILicenseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LicenseServiceClient : System.ServiceModel.ClientBase<IAS.BLL.LicenseService.ILicenseService>, IAS.BLL.LicenseService.ILicenseService {
        
        public LicenseServiceClient() {
        }
        
        public LicenseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LicenseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LicenseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LicenseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetLicenseByCriteria(string licenseNo, string licenseType, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> toDate, string paymentNo, string licenseTypeReceive, IAS.DTO.UserProfile userProfile, int pageNo, int recordPerPage) {
            return base.Channel.GetLicenseByCriteria(licenseNo, licenseType, startDate, toDate, paymentNo, licenseTypeReceive, userProfile, pageNo, recordPerPage);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.PersonalHistory> GetPersonalHistoryByIdCard(string idCard) {
            return base.Channel.GetPersonalHistoryByIdCard(idCard);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetExamHistoryByIdCard(string idCard) {
            return base.Channel.GetExamHistoryByIdCard(idCard);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetTrainingHistoryBy(string idCard) {
            return base.Channel.GetTrainingHistoryBy(idCard);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetTrain_1_To_4_ByIdCard(string idCard) {
            return base.Channel.GetTrain_1_To_4_ByIdCard(idCard);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetUnitLinkByIdCard(string idCard) {
            return base.Channel.GetUnitLinkByIdCard(idCard);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetRequestLicenseByIdCard(string idCard) {
            return base.Channel.GetRequestLicenseByIdCard(idCard);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetReceiveLicenseByCriteria(string licenseNo, string licenseTypeCode, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> toDate) {
            return base.Channel.GetReceiveLicenseByCriteria(licenseNo, licenseTypeCode, startDate, toDate);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.UploadResult<IAS.DTO.UploadHeader, IAS.DTO.ReceiveLicenseDetail>> InsertAndCheckReceiveLicenseGroupUpload(IAS.DTO.UploadData data, IAS.DTO.CompressFileDetail compressFile, string groupNo, string fileName, string userId, string petitionTypeCode, string licenseTypeCode) {
            return base.Channel.InsertAndCheckReceiveLicenseGroupUpload(data, compressFile, groupNo, fileName, userId, petitionTypeCode, licenseTypeCode);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetLicenseVerify(string petitionTypeCode, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> toDate, string Compcode, string requestCompCode) {
            return base.Channel.GetLicenseVerify(petitionTypeCode, startDate, toDate, Compcode, requestCompCode);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetLicenseVerifyByRequest(string petitionTypeCode, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> toDate, string Compcode) {
            return base.Channel.GetLicenseVerifyByRequest(petitionTypeCode, startDate, toDate, Compcode);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.LicenseVerifyDetail> GetLicenseVerifyDetail(string groupUploadNo, string seqNo) {
            return base.Channel.GetLicenseVerifyDetail(groupUploadNo, seqNo);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.AttatchFileLicense[]> GetLicenseVerifyImgDetail(string groupUploadNo, string idCard, string CountPage, int pageIndex, int pageSize) {
            return base.Channel.GetLicenseVerifyImgDetail(groupUploadNo, idCard, CountPage, pageIndex, pageSize);
        }
        
        public IAS.DTO.ResponseService<string> ApproveLicenseVerify(IAS.DTO.SubmitLicenseVerify[] list, string flgApprove, string ApproveID) {
            return base.Channel.ApproveLicenseVerify(list, flgApprove, ApproveID);
        }
        
        public IAS.DTO.ResponseMessage<bool> InsertSingleReceiveLicense(IAS.DTO.ReceiveLicenseHeader header, IAS.DTO.ReceiveLicenseDetail detail, IAS.DTO.UserProfile userProfile) {
            return base.Channel.InsertSingleReceiveLicense(header, detail, userProfile);
        }
        
        public IAS.DTO.ResponseMessage<bool> SubmitSingleOrGroupReceiveLicense(string groupId, IAS.DTO.AttatchFileLicense[] attachs) {
            return base.Channel.SubmitSingleOrGroupReceiveLicense(groupId, attachs);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.SummaryReceiveLicense> UploadDataLicense(IAS.DTO.DataLicenseRequest request) {
            return base.Channel.UploadDataLicense(request);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.AttatchFileLicense[]> MoveExtachFile(string userId, string targetPath, IAS.DTO.AttachFileDetail[] attachFiles) {
            return base.Channel.MoveExtachFile(userId, targetPath, attachFiles);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.ExamHistory[]> GetExamHistoryByID(string idCard) {
            return base.Channel.GetExamHistoryByID(idCard);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.ExamHistory[]> GetExamHistoryByIDWithCondition(string idCard, string licenseTypeCode) {
            return base.Channel.GetExamHistoryByIDWithCondition(idCard, licenseTypeCode);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.TrainPersonHistory[]> GetTrainingHistoryByID(string idCard) {
            return base.Channel.GetTrainingHistoryByID(idCard);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.TrainPersonHistory[]> GetTrainingHistoryByIDWithCondition(string idCard, string licenseTypeCode) {
            return base.Channel.GetTrainingHistoryByIDWithCondition(idCard, licenseTypeCode);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.TrainPersonHistory> GetPersonalTrainByCriteria(string licenseTypeCode, string pettitionTypeCode, string renewTime, string idCard, string licenseNo, string specialTrainCode) {
            return base.Channel.GetPersonalTrainByCriteria(licenseTypeCode, pettitionTypeCode, renewTime, idCard, licenseNo, specialTrainCode);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.Tran3To7[]> GetTrain_3_To_7_ByID(string idCard) {
            return base.Channel.GetTrain_3_To_7_ByID(idCard);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.UnitLink[]> GetUnitLinkByID(string idCard) {
            return base.Channel.GetUnitLinkByID(idCard);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.UnitLink[]> GetUnitLinkByIDWithCondition(string idCard, string licenseTypeCode) {
            return base.Channel.GetUnitLinkByIDWithCondition(idCard, licenseTypeCode);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.PersonAttatchFile[]> GetAttatchFileLicenseByPersonId(string personID) {
            return base.Channel.GetAttatchFileLicenseByPersonId(personID);
        }
        
        public IAS.DTO.ResponseMessage<bool> InsertPersonLicense(IAS.DTO.PersonLicenseHead[] header, IAS.DTO.PersonLicenseDetail[] detail, IAS.DTO.UserProfile userProfile, IAS.DTO.AttatchFileLicense[] files) {
            return base.Channel.InsertPersonLicense(header, detail, userProfile, files);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.ApproverDoctype[]> GetApprocerByDocType(string appdocType) {
            return base.Channel.GetApprocerByDocType(appdocType);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.PersonLicenseDetail[]> GenSEQLicenseDetail(IAS.DTO.PersonLicenseHead uploadGroupNo) {
            return base.Channel.GenSEQLicenseDetail(uploadGroupNo);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.PersonLicenseTransaction[]> GetLicenseTransaction(IAS.DTO.PersonLicenseHead[] head, IAS.DTO.PersonLicenseDetail[] detail) {
            return base.Channel.GetLicenseTransaction(head, detail);
        }
        
        public IAS.DTO.ResponseMessage<bool> SingleLicenseValidation(IAS.DTO.PersonLicenseHead head, IAS.DTO.PersonLicenseDetail detail) {
            return base.Channel.SingleLicenseValidation(head, detail);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.PersonLicenseTransaction[]> GetPaymentLicenseTransaction(IAS.DTO.PersonLicenseHead[] head, IAS.DTO.PersonLicenseDetail[] detail) {
            return base.Channel.GetPaymentLicenseTransaction(head, detail);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetRequesPersontLicenseByIdCard(string idCard) {
            return base.Channel.GetRequesPersontLicenseByIdCard(idCard);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.PersonLicenseTransaction[]> GetRenewLicneseByIdCard(string idCard) {
            return base.Channel.GetRenewLicneseByIdCard(idCard);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.PersonLicenseTransaction> GetRenewLiceneEntityByLicenseNo(string licenseNo) {
            return base.Channel.GetRenewLiceneEntityByLicenseNo(licenseNo);
        }
        
        public IAS.DTO.ResponseMessage<bool> updateRenewLicense(IAS.DTO.PersonLicenseHead h, IAS.DTO.PersonLicenseDetail d) {
            return base.Channel.updateRenewLicense(h, d);
        }
        
        public IAS.DTO.ResponseMessage<bool> updateLicenseDetail(IAS.DTO.PersonLicenseDetail d) {
            return base.Channel.updateLicenseDetail(d);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.PersonLicenseTransaction[]> GetExpiredLicneseByIdCard(string idCard) {
            return base.Channel.GetExpiredLicneseByIdCard(idCard);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.PersonLicenseTransaction[]> getViewPersonLicense(string idCard, string status) {
            return base.Channel.getViewPersonLicense(idCard, status);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.PersonLicenseTransaction> GetLicenseDetailByUploadGroupNo(string upGroupNo) {
            return base.Channel.GetLicenseDetailByUploadGroupNo(upGroupNo);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.PersonLicenseTransaction[]> GetAllLicenseByIDCard(string idCard, string mode, int feemode) {
            return base.Channel.GetAllLicenseByIDCard(idCard, mode, feemode);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.PersonLicenseTransaction> GetLicenseRenewDateByLicenseNo(string licenseNo) {
            return base.Channel.GetLicenseRenewDateByLicenseNo(licenseNo);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetLicenseVerifyHead(string petitionTypeCode, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> toDate, string Compcode, string requestCompCode, string CountPage, int pageNo, int recordPerPage, string StatusApprove) {
            return base.Channel.GetLicenseVerifyHead(petitionTypeCode, startDate, toDate, Compcode, requestCompCode, CountPage, pageNo, recordPerPage, StatusApprove);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetListLicenseDetailVerify(string uploadGroupNo, string CountPage, int pageNo, int recordPerPage) {
            return base.Channel.GetListLicenseDetailVerify(uploadGroupNo, CountPage, pageNo, recordPerPage);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.VerifyDocumentHeader> GetVerifyHeadByUploadGroupNo(string uploadGroupNo) {
            return base.Channel.GetVerifyHeadByUploadGroupNo(uploadGroupNo);
        }
        
        public IAS.DTO.ResponseMessage<bool> CheckLicenseDetailVerifyHasNotApprove(string uploadGroupNo) {
            return base.Channel.CheckLicenseDetailVerifyHasNotApprove(uploadGroupNo);
        }
        
        public IAS.DTO.ResponseMessage<bool> ValidateDetail(string groupId) {
            return base.Channel.ValidateDetail(groupId);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.DetailTemp[]> GetDetail(string groupId) {
            return base.Channel.GetDetail(groupId);
        }
        
        public IAS.DTO.ResponseService<string> GenZipFileLicenseRequest(System.DateTime findDate, string username) {
            return base.Channel.GenZipFileLicenseRequest(findDate, username);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetListLicenseDetailByCriteria(string licenseNo, string licenseType, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> toDate, string paymentNo, string licenseTypeReceive, IAS.DTO.UserProfile userProfile, int pageNo, int recordPerPage, string PageCount) {
            return base.Channel.GetListLicenseDetailByCriteria(licenseNo, licenseType, startDate, toDate, paymentNo, licenseTypeReceive, userProfile, pageNo, recordPerPage, PageCount);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetResultLicenseVerifyHead(string petitionTypeCode, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> toDate, string Compcode, string CountPage, int pageNo, int recordPerPage) {
            return base.Channel.GetResultLicenseVerifyHead(petitionTypeCode, startDate, toDate, Compcode, CountPage, pageNo, recordPerPage);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetListLicenseDetailByPersonal(string licenseNo, string licenseType, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> toDate, string paymentNo, string licenseTypeReceive, IAS.DTO.UserProfile userProfile, int pageNo, int recordPerPage, bool CountAgain) {
            return base.Channel.GetListLicenseDetailByPersonal(licenseNo, licenseType, startDate, toDate, paymentNo, licenseTypeReceive, userProfile, pageNo, recordPerPage, CountAgain);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetLicenseVerifyHeadByOIC(string petitionTypeCode, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> toDate, string requestCompCode, string CountPage, int pageNo, int recordPerPage, string StatusApprove) {
            return base.Channel.GetLicenseVerifyHeadByOIC(petitionTypeCode, startDate, toDate, requestCompCode, CountPage, pageNo, recordPerPage, StatusApprove);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetListLicenseDetailAdminByCriteria(string licenseNo, string licenseType, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> toDate, string paymentNo, string licenseTypeReceive, IAS.DTO.UserProfile userProfile, int pageNo, int recordPerPage, string PageCount) {
            return base.Channel.GetListLicenseDetailAdminByCriteria(licenseNo, licenseType, startDate, toDate, paymentNo, licenseTypeReceive, userProfile, pageNo, recordPerPage, PageCount);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.GBHoliday[]> GETGBHoliday(string date) {
            return base.Channel.GETGBHoliday(date);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetEditLicenseHead(string petitionTypeCode, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> toDate, string Compcode, string CountPage, int pageNo, int recordPerPage) {
            return base.Channel.GetEditLicenseHead(petitionTypeCode, startDate, toDate, Compcode, CountPage, pageNo, recordPerPage);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.ValidateLicense[]> GetPropLiecense(string licenseType, string pettionType, int renewTime, int groupId) {
            return base.Channel.GetPropLiecense(licenseType, pettionType, renewTime, groupId);
        }
        
        public IAS.DTO.ResponseMessage<bool> ChkSpecialExam(string[] fileType, string licenseType) {
            return base.Channel.ChkSpecialExam(fileType, licenseType);
        }
        
        public IAS.DTO.ResponseMessage<int> GetRenewTimebyLicenseNo(string licenseNo) {
            return base.Channel.GetRenewTimebyLicenseNo(licenseNo);
        }
        
        public IAS.DTO.ResponseMessage<bool> CheckSpecial(string idCard) {
            return base.Channel.CheckSpecial(idCard);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.TrainSpecial[]> GetSpecialTempTrainById(string idCard) {
            return base.Channel.GetSpecialTempTrainById(idCard);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.ExamSpecial[]> GetSpecialTempExamById(string idCard) {
            return base.Channel.GetSpecialTempExamById(idCard);
        }
        
        public IAS.DTO.ResponseMessage<bool> ValidateProp(string groupId) {
            return base.Channel.ValidateProp(groupId);
        }
        
        public IAS.DTO.ResponseMessage<bool> LicenseRevokedValidation(string[] license, string licenseTypeCode) {
            return base.Channel.LicenseRevokedValidation(license, licenseTypeCode);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetRenewLicenseQuick(string PetitionType, System.Nullable<System.DateTime> DateStart, System.Nullable<System.DateTime> DateEnd, string CompCode, string Days) {
            return base.Channel.GetRenewLicenseQuick(PetitionType, DateStart, DateEnd, CompCode, Days);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.PersonLicenseApprover[]> GetPersonalLicenseApprover(string licenseType) {
            return base.Channel.GetPersonalLicenseApprover(licenseType);
        }
        
        public IAS.DTO.ResponseService<System.DateTime[]> GetLicenseRequestOicApprove(IAS.DTO.RangeDateRequest request) {
            return base.Channel.GetLicenseRequestOicApprove(request);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetMoveCompanyIn(string LicenseType, string CompCode, System.DateTime DateStart, System.DateTime DateEnd) {
            return base.Channel.GetMoveCompanyIn(LicenseType, CompCode, DateStart, DateEnd);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetMoveCompanyOut(string LicenseType, string CompCode, System.DateTime DateStart, System.DateTime DateEnd) {
            return base.Channel.GetMoveCompanyOut(LicenseType, CompCode, DateStart, DateEnd);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetLicenseStatisticsReport(string LicenseTypeCode, string StartDate1, string EndDate1, string StartDate2, string EndDate2) {
            return base.Channel.GetLicenseStatisticsReport(LicenseTypeCode, StartDate1, EndDate1, StartDate2, EndDate2);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetSumLicenseStatisticsReport(string StartDate1, string EndDate1) {
            return base.Channel.GetSumLicenseStatisticsReport(StartDate1, EndDate1);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetTopCompanyMoveOut(string LicenseType, System.Nullable<System.DateTime> DateStart, System.Nullable<System.DateTime> DateEnd) {
            return base.Channel.GetTopCompanyMoveOut(LicenseType, DateStart, DateEnd);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.SubPaymentHead[]> GetIndexSubPaymentH(string groupReqNo) {
            return base.Channel.GetIndexSubPaymentH(groupReqNo);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.SubPaymentDetail[]> GetIndexSubPaymentD(string headReqNo) {
            return base.Channel.GetIndexSubPaymentD(headReqNo);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.PersonLicenseDetail[]> GetIndexLicenseD(string uploadGroupNo) {
            return base.Channel.GetIndexLicenseD(uploadGroupNo);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetReplacementReport(string LicenseTypeCode, string Compcode, string Replacement, string StartDate, string EndDate) {
            return base.Channel.GetReplacementReport(LicenseTypeCode, Compcode, Replacement, StartDate, EndDate);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetLincse0304(string lincense) {
            return base.Channel.GetLincse0304(lincense);
        }
        
        public IAS.DTO.ResponseService<string> AddLincse0304(System.Collections.Generic.Dictionary<string, string> lincense) {
            return base.Channel.AddLincse0304(lincense);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.ConfigDocument[]> GetLicenseConfigByPetition(string petitionType, string licenseType) {
            return base.Channel.GetLicenseConfigByPetition(petitionType, licenseType);
        }
        
        public IAS.DTO.ResponseMessage<bool> GetAgentCheckTrain(string id) {
            return base.Channel.GetAgentCheckTrain(id);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetObtainLicenseByIdCard(string idCard) {
            return base.Channel.GetObtainLicenseByIdCard(idCard);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetLicenseDetailByCriteria(System.DateTime dateStart, System.DateTime dateEnd, string IdCardNo, string Names, string Lastname, string LicenseType, string CompCode, int Page, int RowPerPage, bool isCount) {
            return base.Channel.GetLicenseDetailByCriteria(dateStart, dateEnd, IdCardNo, Names, Lastname, LicenseType, CompCode, Page, RowPerPage, isCount);
        }
        
        public IAS.DTO.ResponseService<string> GenZipFileLicenseByIdCardNo(IAS.DTO.GenLicenseDetail[] LicenseDetail, string username) {
            return base.Channel.GenZipFileLicenseByIdCardNo(LicenseDetail, username);
        }
        
        public IAS.DTO.ResponseMessage<bool> ChkLicenseAboutActive(string idCard, string licenseType) {
            return base.Channel.ChkLicenseAboutActive(idCard, licenseType);
        }
    }
}
