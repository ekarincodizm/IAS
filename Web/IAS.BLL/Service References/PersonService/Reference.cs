//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IAS.BLL.PersonService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PersonService.IPersonService")]
    public interface IPersonService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetUserProfile", ReplyAction="http://tempuri.org/IPersonService/GetUserProfileResponse")]
        IAS.DTO.ResponseService<IAS.DTO.Person> GetUserProfile(string Id, string memType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetById", ReplyAction="http://tempuri.org/IPersonService/GetByIdResponse")]
        IAS.DTO.ResponseService<IAS.DTO.Person> GetById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetDataTo8Report", ReplyAction="http://tempuri.org/IPersonService/GetDataTo8ReportResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetDataTo8Report(string ID, string license_code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetUserProfileById", ReplyAction="http://tempuri.org/IPersonService/GetUserProfileByIdResponse")]
        IAS.DTO.ResponseService<IAS.DTO.Person> GetUserProfileById(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetPersonTemp", ReplyAction="http://tempuri.org/IPersonService/GetPersonTempResponse")]
        IAS.DTO.ResponseService<IAS.DTO.PersonTemp> GetPersonTemp(string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/SetPersonTemp", ReplyAction="http://tempuri.org/IPersonService/SetPersonTempResponse")]
        IAS.DTO.ResponseMessage<bool> SetPersonTemp(IAS.DTO.PersonTemp tmpPerson, IAS.DTO.PersonAttatchFile[] tmpFiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/EditPerson", ReplyAction="http://tempuri.org/IPersonService/EditPersonResponse")]
        IAS.DTO.ResponseMessage<bool> EditPerson(IAS.DTO.PersonTemp tmpPerson);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetUserProfileAttatchFileByPersonId", ReplyAction="http://tempuri.org/IPersonService/GetUserProfileAttatchFileByPersonIdResponse")]
        IAS.DTO.ResponseService<IAS.DTO.PersonAttatchFile[]> GetUserProfileAttatchFileByPersonId(string personId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetStatisticResetPassword", ReplyAction="http://tempuri.org/IPersonService/GetStatisticResetPasswordResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetStatisticResetPassword(string idCard, string firstName, string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetAttatchFileByPersonId", ReplyAction="http://tempuri.org/IPersonService/GetAttatchFileByPersonIdResponse")]
        IAS.DTO.ResponseService<IAS.DTO.PersonAttatchFile[]> GetAttatchFileByPersonId(string personId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/PersonApprove", ReplyAction="http://tempuri.org/IPersonService/PersonApproveResponse")]
        IAS.DTO.ResponseMessage<bool> PersonApprove(string[] listId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/PersonEditApprove", ReplyAction="http://tempuri.org/IPersonService/PersonEditApproveResponse")]
        IAS.DTO.ResponseMessage<bool> PersonEditApprove(string[] listId, string appresult, string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/PersonNotApprove", ReplyAction="http://tempuri.org/IPersonService/PersonNotApproveResponse")]
        IAS.DTO.ResponseMessage<bool> PersonNotApprove(string[] listId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/Authentication", ReplyAction="http://tempuri.org/IPersonService/AuthenticationResponse")]
        IAS.DTO.ResponseService<IAS.DTO.UserProfile> Authentication(string userName, string password, bool IsOIC, string Ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/InsertOIC", ReplyAction="http://tempuri.org/IPersonService/InsertOICResponse")]
        IAS.DTO.ResponseMessage<bool> InsertOIC(string oicEmpNo, string oicUserName, string preNameCode, string firstName, string lastName, string sex, string oicTypeCode, byte[] sign);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/IsRightUserOIC", ReplyAction="http://tempuri.org/IPersonService/IsRightUserOICResponse")]
        IAS.DTO.ResponseMessage<bool> IsRightUserOIC(string oicUserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/ChangePasswordTime", ReplyAction="http://tempuri.org/IPersonService/ChangePasswordTimeResponse")]
        bool ChangePasswordTime(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/ChangePassword", ReplyAction="http://tempuri.org/IPersonService/ChangePasswordResponse")]
        IAS.DTO.ResponseMessage<bool> ChangePassword(string userId, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetUserProfileByUsername", ReplyAction="http://tempuri.org/IPersonService/GetUserProfileByUsernameResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetUserProfileByUsername(string userName, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetPersonTempEditByCriteria", ReplyAction="http://tempuri.org/IPersonService/GetPersonTempEditByCriteriaResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetPersonTempEditByCriteria(string firstName, string lastName, System.Nullable<System.DateTime> starDate, System.Nullable<System.DateTime> toDate, string IdCard, string memberTypeCode, string email, string compCode, string status, int pageNo, int recordPerPage, string para);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetPersonByCriteria", ReplyAction="http://tempuri.org/IPersonService/GetPersonByCriteriaResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetPersonByCriteria(string firstName, string lastName, System.Nullable<System.DateTime> starDate, System.Nullable<System.DateTime> toDate, string IdCard, string memberTypeCode, string email, string compCode, string status, int pageNo, int recordPerPage, string para);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetTempAttatchFileByPersonId", ReplyAction="http://tempuri.org/IPersonService/GetTempAttatchFileByPersonIdResponse")]
        IAS.DTO.ResponseService<IAS.DTO.PersonAttatchFile[]> GetTempAttatchFileByPersonId(string personId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/UpdateOIC", ReplyAction="http://tempuri.org/IPersonService/UpdateOICResponse")]
        IAS.DTO.ResponseMessage<bool> UpdateOIC(string userId, string oicUserName, string preNameCode, string firstName, string lastName, string sex, string memberType, byte[] imgSign);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetPersonByCriteriaAtPage", ReplyAction="http://tempuri.org/IPersonService/GetPersonByCriteriaAtPageResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetPersonByCriteriaAtPage(string firstName, string lastName, string IdCard, string memberTypeCode, string email, string compCode, string status, int pageNo, int recordPerPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/ForgetPasswordRequest", ReplyAction="http://tempuri.org/IPersonService/ForgetPasswordRequestResponse")]
        IAS.DTO.ResponseMessage<bool> ForgetPasswordRequest(string username, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/RenewPassword", ReplyAction="http://tempuri.org/IPersonService/RenewPasswordResponse")]
        IAS.DTO.ResponseMessage<bool> RenewPassword(string username, string email, string oldpassword, string newpassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/getPDetailByIDCard", ReplyAction="http://tempuri.org/IPersonService/getPDetailByIDCardResponse")]
        IAS.DTO.ResponseService<IAS.DTO.Registration> getPDetailByIDCard(string idCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/SetOffLineStatus", ReplyAction="http://tempuri.org/IPersonService/SetOffLineStatusResponse")]
        IAS.DTO.ResponseMessage<bool> SetOffLineStatus(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/SetOffLineAllStatus", ReplyAction="http://tempuri.org/IPersonService/SetOffLineAllStatusResponse")]
        IAS.DTO.ResponseMessage<bool> SetOffLineAllStatus(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetOnLineUser", ReplyAction="http://tempuri.org/IPersonService/GetOnLineUserResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetOnLineUser(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetPersonalDetail", ReplyAction="http://tempuri.org/IPersonService/GetPersonalDetailResponse")]
        IAS.DTO.ResponseService<IAS.DTO.Person> GetPersonalDetail(string idCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetOicPersonSignImg", ReplyAction="http://tempuri.org/IPersonService/GetOicPersonSignImgResponse")]
        IAS.DTO.ResponseService<IAS.DTO.SignatureImg> GetOicPersonSignImg(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/CheckAuthorityEditExam", ReplyAction="http://tempuri.org/IPersonService/CheckAuthorityEditExamResponse")]
        IAS.DTO.ResponseMessage<bool> CheckAuthorityEditExam(IAS.DTO.UserProfile userProfile, string testingNo, string testingDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetEmailMoveExam", ReplyAction="http://tempuri.org/IPersonService/GetEmailMoveExamResponse")]
        string[] GetEmailMoveExam(string testingNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/OICAuthenWithADService", ReplyAction="http://tempuri.org/IPersonService/OICAuthenWithADServiceResponse")]
        IAS.DTO.ResponseService<IAS.DTO.OICADProperties> OICAuthenWithADService(string ADUserName, string ADPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonService/GetDataRenewReport", ReplyAction="http://tempuri.org/IPersonService/GetDataRenewReportResponse")]
        IAS.DTO.ResponseService<System.Data.DataSet> GetDataRenewReport(string id, string license_code, string license_no);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPersonServiceChannel : IAS.BLL.PersonService.IPersonService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PersonServiceClient : System.ServiceModel.ClientBase<IAS.BLL.PersonService.IPersonService>, IAS.BLL.PersonService.IPersonService {
        
        public PersonServiceClient() {
        }
        
        public PersonServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PersonServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.Person> GetUserProfile(string Id, string memType) {
            return base.Channel.GetUserProfile(Id, memType);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.Person> GetById(string Id) {
            return base.Channel.GetById(Id);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetDataTo8Report(string ID, string license_code) {
            return base.Channel.GetDataTo8Report(ID, license_code);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.Person> GetUserProfileById(string Id) {
            return base.Channel.GetUserProfileById(Id);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.PersonTemp> GetPersonTemp(string Id) {
            return base.Channel.GetPersonTemp(Id);
        }
        
        public IAS.DTO.ResponseMessage<bool> SetPersonTemp(IAS.DTO.PersonTemp tmpPerson, IAS.DTO.PersonAttatchFile[] tmpFiles) {
            return base.Channel.SetPersonTemp(tmpPerson, tmpFiles);
        }
        
        public IAS.DTO.ResponseMessage<bool> EditPerson(IAS.DTO.PersonTemp tmpPerson) {
            return base.Channel.EditPerson(tmpPerson);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.PersonAttatchFile[]> GetUserProfileAttatchFileByPersonId(string personId) {
            return base.Channel.GetUserProfileAttatchFileByPersonId(personId);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetStatisticResetPassword(string idCard, string firstName, string lastName) {
            return base.Channel.GetStatisticResetPassword(idCard, firstName, lastName);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.PersonAttatchFile[]> GetAttatchFileByPersonId(string personId) {
            return base.Channel.GetAttatchFileByPersonId(personId);
        }
        
        public IAS.DTO.ResponseMessage<bool> PersonApprove(string[] listId) {
            return base.Channel.PersonApprove(listId);
        }
        
        public IAS.DTO.ResponseMessage<bool> PersonEditApprove(string[] listId, string appresult, string userid) {
            return base.Channel.PersonEditApprove(listId, appresult, userid);
        }
        
        public IAS.DTO.ResponseMessage<bool> PersonNotApprove(string[] listId) {
            return base.Channel.PersonNotApprove(listId);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.UserProfile> Authentication(string userName, string password, bool IsOIC, string Ip) {
            return base.Channel.Authentication(userName, password, IsOIC, Ip);
        }
        
        public IAS.DTO.ResponseMessage<bool> InsertOIC(string oicEmpNo, string oicUserName, string preNameCode, string firstName, string lastName, string sex, string oicTypeCode, byte[] sign) {
            return base.Channel.InsertOIC(oicEmpNo, oicUserName, preNameCode, firstName, lastName, sex, oicTypeCode, sign);
        }
        
        public IAS.DTO.ResponseMessage<bool> IsRightUserOIC(string oicUserName) {
            return base.Channel.IsRightUserOIC(oicUserName);
        }
        
        public bool ChangePasswordTime(string userName) {
            return base.Channel.ChangePasswordTime(userName);
        }
        
        public IAS.DTO.ResponseMessage<bool> ChangePassword(string userId, string oldPassword, string newPassword) {
            return base.Channel.ChangePassword(userId, oldPassword, newPassword);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetUserProfileByUsername(string userName, string email) {
            return base.Channel.GetUserProfileByUsername(userName, email);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetPersonTempEditByCriteria(string firstName, string lastName, System.Nullable<System.DateTime> starDate, System.Nullable<System.DateTime> toDate, string IdCard, string memberTypeCode, string email, string compCode, string status, int pageNo, int recordPerPage, string para) {
            return base.Channel.GetPersonTempEditByCriteria(firstName, lastName, starDate, toDate, IdCard, memberTypeCode, email, compCode, status, pageNo, recordPerPage, para);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetPersonByCriteria(string firstName, string lastName, System.Nullable<System.DateTime> starDate, System.Nullable<System.DateTime> toDate, string IdCard, string memberTypeCode, string email, string compCode, string status, int pageNo, int recordPerPage, string para) {
            return base.Channel.GetPersonByCriteria(firstName, lastName, starDate, toDate, IdCard, memberTypeCode, email, compCode, status, pageNo, recordPerPage, para);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.PersonAttatchFile[]> GetTempAttatchFileByPersonId(string personId) {
            return base.Channel.GetTempAttatchFileByPersonId(personId);
        }
        
        public IAS.DTO.ResponseMessage<bool> UpdateOIC(string userId, string oicUserName, string preNameCode, string firstName, string lastName, string sex, string memberType, byte[] imgSign) {
            return base.Channel.UpdateOIC(userId, oicUserName, preNameCode, firstName, lastName, sex, memberType, imgSign);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetPersonByCriteriaAtPage(string firstName, string lastName, string IdCard, string memberTypeCode, string email, string compCode, string status, int pageNo, int recordPerPage) {
            return base.Channel.GetPersonByCriteriaAtPage(firstName, lastName, IdCard, memberTypeCode, email, compCode, status, pageNo, recordPerPage);
        }
        
        public IAS.DTO.ResponseMessage<bool> ForgetPasswordRequest(string username, string email) {
            return base.Channel.ForgetPasswordRequest(username, email);
        }
        
        public IAS.DTO.ResponseMessage<bool> RenewPassword(string username, string email, string oldpassword, string newpassword) {
            return base.Channel.RenewPassword(username, email, oldpassword, newpassword);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.Registration> getPDetailByIDCard(string idCard) {
            return base.Channel.getPDetailByIDCard(idCard);
        }
        
        public IAS.DTO.ResponseMessage<bool> SetOffLineStatus(string userName) {
            return base.Channel.SetOffLineStatus(userName);
        }
        
        public IAS.DTO.ResponseMessage<bool> SetOffLineAllStatus(string userName) {
            return base.Channel.SetOffLineAllStatus(userName);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetOnLineUser(string userName) {
            return base.Channel.GetOnLineUser(userName);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.Person> GetPersonalDetail(string idCard) {
            return base.Channel.GetPersonalDetail(idCard);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.SignatureImg> GetOicPersonSignImg(string id) {
            return base.Channel.GetOicPersonSignImg(id);
        }
        
        public IAS.DTO.ResponseMessage<bool> CheckAuthorityEditExam(IAS.DTO.UserProfile userProfile, string testingNo, string testingDate) {
            return base.Channel.CheckAuthorityEditExam(userProfile, testingNo, testingDate);
        }
        
        public string[] GetEmailMoveExam(string testingNo) {
            return base.Channel.GetEmailMoveExam(testingNo);
        }
        
        public IAS.DTO.ResponseService<IAS.DTO.OICADProperties> OICAuthenWithADService(string ADUserName, string ADPassword) {
            return base.Channel.OICAuthenWithADService(ADUserName, ADPassword);
        }
        
        public IAS.DTO.ResponseService<System.Data.DataSet> GetDataRenewReport(string id, string license_code, string license_no) {
            return base.Channel.GetDataRenewReport(id, license_code, license_no);
        }
    }
}
